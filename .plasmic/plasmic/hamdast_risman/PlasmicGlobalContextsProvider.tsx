/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bN5uNsAhTefwW3S14VjvMG

import * as React from "react";
import { hasVariant, ensureGlobalVariants } from "@plasmicapp/react-web";
import { Fragment } from "@/common/fragment/designSystemGlobalContext"; // plasmic-import: O48mK20zxG5g/codeComponent
import { Splunk } from "@/common/fragment/splunk"; // plasmic-import: OtwyqzpoIgmH/codeComponent
import { AuthGlobalContext } from "@/common/fragment/authGlobalContext"; // plasmic-import: FmIK6cMt8uTv/codeComponent
import { GrowthbookGlobalContext } from "@/common/fragment/growthbookGlobalContext"; // plasmic-import: s8sn0Qj30fkL/codeComponent
import { PWA } from "@/common/fragment/pwa"; // plasmic-import: 2P-VNbugLA0_/codeComponent

export interface GlobalContextsProviderProps {
  children?: React.ReactElement;
  fragmentProps?: Partial<
    Omit<React.ComponentProps<typeof Fragment>, "children">
  >;
  splunkProps?: Partial<Omit<React.ComponentProps<typeof Splunk>, "children">>;
  authGlobalContextProps?: Partial<
    Omit<React.ComponentProps<typeof AuthGlobalContext>, "children">
  >;
  growthbookGlobalContextProps?: Partial<
    Omit<React.ComponentProps<typeof GrowthbookGlobalContext>, "children">
  >;
  pwaProps?: Partial<Omit<React.ComponentProps<typeof PWA>, "children">>;
}

export default function GlobalContextsProvider(
  props: GlobalContextsProviderProps
) {
  const {
    children,
    fragmentProps,
    splunkProps,
    authGlobalContextProps,
    growthbookGlobalContextProps,
    pwaProps
  } = props;

  return (
    <Fragment
      {...fragmentProps}
      apiConfig={
        fragmentProps && "apiConfig" in fragmentProps
          ? fragmentProps.apiConfig!
          : undefined
      }
      previewApiConfig={
        fragmentProps && "previewApiConfig" in fragmentProps
          ? fragmentProps.previewApiConfig!
          : undefined
      }
    >
      <Splunk
        {...splunkProps}
        defaultApiHost={
          splunkProps && "defaultApiHost" in splunkProps
            ? splunkProps.defaultApiHost!
            : undefined
        }
        defaultApiKey={
          splunkProps && "defaultApiKey" in splunkProps
            ? splunkProps.defaultApiKey!
            : undefined
        }
      >
        <AuthGlobalContext
          {...authGlobalContextProps}
          previewToken={
            authGlobalContextProps && "previewToken" in authGlobalContextProps
              ? authGlobalContextProps.previewToken!
              : undefined
          }
        >
          <GrowthbookGlobalContext
            {...growthbookGlobalContextProps}
            apiHost={
              growthbookGlobalContextProps &&
              "apiHost" in growthbookGlobalContextProps
                ? growthbookGlobalContextProps.apiHost!
                : undefined
            }
            clientKey={
              growthbookGlobalContextProps &&
              "clientKey" in growthbookGlobalContextProps
                ? growthbookGlobalContextProps.clientKey!
                : undefined
            }
            previewAttributes={
              growthbookGlobalContextProps &&
              "previewAttributes" in growthbookGlobalContextProps
                ? growthbookGlobalContextProps.previewAttributes!
                : undefined
            }
          >
            <PWA {...pwaProps}>{children}</PWA>
          </GrowthbookGlobalContext>
        </AuthGlobalContext>
      </Splunk>
    </Fragment>
  );
}
