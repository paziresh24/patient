// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sMdpLWyxbzDCruwMRffW2m
// Component: YHypsyWp2tOf

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { SideEffect } from "@plasmicpkgs/plasmic-basic-components";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_fragment_design_system_css from "../fragment_design_system/plasmic.module.css"; // plasmic-import: h9Dbk9ygddw7UVEq1NNhKi/projectcss
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: sMdpLWyxbzDCruwMRffW2m/projectcss
import sty from "./PlasmicExternalBookSurveyPopup.module.css"; // plasmic-import: YHypsyWp2tOf/css

createPlasmicElementProxy;

export type PlasmicExternalBookSurveyPopup__VariantMembers = {};
export type PlasmicExternalBookSurveyPopup__VariantsArgs = {};
type VariantPropType = keyof PlasmicExternalBookSurveyPopup__VariantsArgs;
export const PlasmicExternalBookSurveyPopup__VariantProps =
  new Array<VariantPropType>();

export type PlasmicExternalBookSurveyPopup__ArgsType = {};
type ArgPropType = keyof PlasmicExternalBookSurveyPopup__ArgsType;
export const PlasmicExternalBookSurveyPopup__ArgProps =
  new Array<ArgPropType>();

export type PlasmicExternalBookSurveyPopup__OverridesType = {
  root?: Flex__<"div">;
  showSurveyPopupRemoveCookie?: Flex__<typeof SideEffect>;
  sideEffect?: Flex__<typeof SideEffect>;
};

export interface DefaultExternalBookSurveyPopupProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicExternalBookSurveyPopup__RenderFunc(props: {
  variants: PlasmicExternalBookSurveyPopup__VariantsArgs;
  args: PlasmicExternalBookSurveyPopup__ArgsType;
  overrides: PlasmicExternalBookSurveyPopup__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const $globalActions = useGlobalActions?.();

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_fragment_design_system_css.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
    >
      <SideEffect
        data-plasmic-name={"showSurveyPopupRemoveCookie"}
        data-plasmic-override={overrides.showSurveyPopupRemoveCookie}
        className={classNames(
          "__wab_instance",
          sty.showSurveyPopupRemoveCookie
        )}
        onMount={async () => {
          const $steps = {};

          $steps["showSurveyPopup"] = document.cookie.includes("transitionData")
            ? (() => {
                const actionArgs = {
                  customFunction: async () => {
                    return (() => {
                      return (function () {
                        function getTransitionData() {
                          const name = "transitionData=";
                          const cookies = document.cookie.split(";");
                          for (let i = 0; i < cookies.length; i++) {
                            let c = cookies[i].trim();
                            if (c.indexOf(name) === 0) {
                              const cookieValue = c.substring(
                                name.length,
                                c.length
                              );
                              try {
                                const decodedValue =
                                  decodeURIComponent(cookieValue);
                                return JSON.parse(decodedValue);
                              } catch (e) {
                                console.error(
                                  "Error parsing transitionData cookie:",
                                  e
                                );
                                return null;
                              }
                            }
                          }
                          return null;
                        }
                        function deleteTransitionDataCookie() {
                          const domains = [
                            "paziresh24.com",
                            "www.paziresh24.com"
                          ];

                          const expires = "Thu, 01 Jan 1970 00:00:00 GMT";
                          domains.forEach(domain => {
                            document.cookie = `transitionData=; expires=${expires}; domain=${domain}; path=/`;
                          });
                        }
                        const transitionData = getTransitionData();
                        if (transitionData) {
                          const terminalId = encodeURIComponent(
                            transitionData.terminalId || ""
                          );
                          const siteTitle = encodeURIComponent(
                            transitionData.destinationHost || ""
                          );
                          const drName = encodeURIComponent(
                            transitionData.destinationDoctorName || ""
                          );
                          const surveyURL = `https://survey.porsline.ir/s/CA0z9O8?ac=1&ns=0&terminal-id=${terminalId}&site-title=${siteTitle}&dr-name=${drName}#/?ac=1&ns=0&terminal-id=${terminalId}&site-title=${siteTitle}&dr-name=${drName}`;
                          (function () {
                            var js,
                              q,
                              d = document,
                              gi = d.getElementById,
                              ifid = "porsline-popup-iframe",
                              ce = d.createElement,
                              gt = d.getElementsByTagName,
                              id = "porsline-share",
                              b =
                                "https://cdn.porsline.ir/static/panel/v2/statics/";
                            if (!gi.call(d, id)) {
                              js = ce.call(d, "script");
                              js.id = id;
                              js.src = b + "popup.js";
                              q = gt.call(d, "script")[0];
                              q.parentNode.insertBefore(js, q);
                            }
                          })();
                          var clCA0z9O8 = function (ifid) {
                            var iframe = document.getElementById(ifid);
                            if (iframe) {
                              iframe.fetchPriority = "high";
                              iframe.src = surveyURL;
                              iframe.style.position = "fixed";
                              iframe.style.top = "0";
                              iframe.style.left = "0";
                              iframe.style.width = "100%";
                              iframe.style.height = "100%";
                              iframe.style.zIndex = "2147483647";
                              iframe.style.border = "none";
                              iframe.style.boxSizing = "border-box";
                              iframe.style.pointerEvents = "auto";
                            } else {
                              console.error(
                                `Iframe with id '${ifid}' not found.`
                              );
                            }
                          };
                          setTimeout(function () {
                            clCA0z9O8("porsline-popup-iframe");
                            if (typeof showPopUp === "function") {
                              showPopUp();
                            } else {
                              console.error(
                                "showPopUp function is not defined."
                              );
                            }
                          }, 200);
                          deleteTransitionDataCookie();
                        } else {
                          console.error("No transitionData cookie found.");
                        }
                      })();
                    })();
                  }
                };
                return (({ customFunction }) => {
                  return customFunction();
                })?.apply(null, [actionArgs]);
              })()
            : undefined;
          if (
            $steps["showSurveyPopup"] != null &&
            typeof $steps["showSurveyPopup"] === "object" &&
            typeof $steps["showSurveyPopup"].then === "function"
          ) {
            $steps["showSurveyPopup"] = await $steps["showSurveyPopup"];
          }

          $steps["sendSplunkEvent"] = document.cookie.includes("transitionData")
            ? (() => {
                const actionArgs = {
                  args: [
                    "POST",
                    "https://rokhdad-splunk-hec.paziresh24.com/services/collector",
                    undefined,
                    (() => {
                      try {
                        return {
                          sourcetype: "_json",
                          event: {
                            event_group: "search_metrics",
                            event_type: "external_book_survey",
                            current_url: window.location.href,
                            terminal_id: window.document.cookie
                              ?.split("; ")
                              ?.find?.(row => row.startsWith("terminal_id="))
                              ?.split?.("=")?.[1],
                            survey_response_status: window.document.cookie
                              ?.split("; ")
                              ?.find?.(row => row.startsWith("transitionData="))
                              ?.split?.("surveyResponseStatus%22%3A")?.[1]
                              ?.split?.("%22%2C")?.[0],
                            destination_url: window.document.cookie
                              ?.split("; ")
                              ?.find?.(row => row.startsWith("transitionData="))
                              ?.split?.("destinationURL%22%3A")?.[1]
                              ?.split?.("%22%2C")?.[0],
                            destination_host: window.document.cookie
                              ?.split("; ")
                              ?.find?.(row => row.startsWith("transitionData="))
                              ?.split?.("destinationHost%22%3A")?.[1]
                              ?.split?.("%22%2C")?.[0],
                            destination_doctor_name: window.document.cookie
                              ?.split("; ")
                              ?.find?.(row => row.startsWith("transitionData="))
                              ?.split?.("destinationDoctorName%22%3A")?.[1]
                              ?.split?.("%22%2C")?.[0]
                          }
                        };
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return {
                            sourcetype: "_json",
                            event: {
                              event_group: "search_metrics",
                              event_type: "external_book_survey"
                            }
                          };
                        }
                        throw e;
                      }
                    })(),
                    {
                      headers: {
                        Authorization:
                          "Splunk 9da1ff03-1642-4f63-aba2-2ea5e033f06d"
                      }
                    }
                  ]
                };
                return $globalActions["Fragment.apiRequest"]?.apply(null, [
                  ...actionArgs.args
                ]);
              })()
            : undefined;
          if (
            $steps["sendSplunkEvent"] != null &&
            typeof $steps["sendSplunkEvent"] === "object" &&
            typeof $steps["sendSplunkEvent"].then === "function"
          ) {
            $steps["sendSplunkEvent"] = await $steps["sendSplunkEvent"];
          }

          $steps["removeTheTransitionDataCookie"] = true
            ? (() => {
                const actionArgs = {
                  customFunction: async () => {
                    return (() => {
                      document.cookie =
                        "transitionData=; expires=Thu, 01 Jan 1970 00:00:00 UTC; domain=.paziresh24.com; path=/";
                      return (document.cookie =
                        "transitionData=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=.paziresh24.com;");
                    })();
                  }
                };
                return (({ customFunction }) => {
                  return customFunction();
                })?.apply(null, [actionArgs]);
              })()
            : undefined;
          if (
            $steps["removeTheTransitionDataCookie"] != null &&
            typeof $steps["removeTheTransitionDataCookie"] === "object" &&
            typeof $steps["removeTheTransitionDataCookie"].then === "function"
          ) {
            $steps["removeTheTransitionDataCookie"] = await $steps[
              "removeTheTransitionDataCookie"
            ];
          }
        }}
      />

      <SideEffect
        data-plasmic-name={"sideEffect"}
        data-plasmic-override={overrides.sideEffect}
        className={classNames("__wab_instance", sty.sideEffect)}
        onMount={async () => {
          const $steps = {};

          $steps["runCode"] = true
            ? (() => {
                const actionArgs = {
                  customFunction: async () => {
                    return (() => {
                      function getTransitionData() {
                        const name = "transitionData=";
                        const cookies = globalThis.window.document.cookie
                          .split(";")
                          .map(c => c.trim());
                        console.log(cookies);
                        const cookie = cookies.find(c => c.startsWith(name));
                        if (cookie) {
                          console.log("transitionData exists in cookies");
                          try {
                            const cookieValue = cookie.slice(name.length);
                            return JSON.parse(decodeURIComponent(cookieValue));
                          } catch (e) {
                            console.error(
                              "Error parsing transitionData cookie:",
                              e
                            );
                          }
                        }
                        return null;
                      }
                      return getTransitionData();
                    })();
                  }
                };
                return (({ customFunction }) => {
                  return customFunction();
                })?.apply(null, [actionArgs]);
              })()
            : undefined;
          if (
            $steps["runCode"] != null &&
            typeof $steps["runCode"] === "object" &&
            typeof $steps["runCode"].then === "function"
          ) {
            $steps["runCode"] = await $steps["runCode"];
          }
        }}
      />
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "showSurveyPopupRemoveCookie", "sideEffect"],
  showSurveyPopupRemoveCookie: ["showSurveyPopupRemoveCookie"],
  sideEffect: ["sideEffect"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  showSurveyPopupRemoveCookie: typeof SideEffect;
  sideEffect: typeof SideEffect;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicExternalBookSurveyPopup__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicExternalBookSurveyPopup__VariantsArgs;
    args?: PlasmicExternalBookSurveyPopup__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicExternalBookSurveyPopup__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicExternalBookSurveyPopup__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicExternalBookSurveyPopup__ArgProps,
          internalVariantPropNames: PlasmicExternalBookSurveyPopup__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicExternalBookSurveyPopup__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicExternalBookSurveyPopup";
  } else {
    func.displayName = `PlasmicExternalBookSurveyPopup.${nodeName}`;
  }
  return func;
}

export const PlasmicExternalBookSurveyPopup = Object.assign(
  // Top-level PlasmicExternalBookSurveyPopup renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    showSurveyPopupRemoveCookie: makeNodeComponent(
      "showSurveyPopupRemoveCookie"
    ),
    sideEffect: makeNodeComponent("sideEffect"),

    // Metadata about props expected for PlasmicExternalBookSurveyPopup
    internalVariantProps: PlasmicExternalBookSurveyPopup__VariantProps,
    internalArgProps: PlasmicExternalBookSurveyPopup__ArgProps
  }
);

export default PlasmicExternalBookSurveyPopup;
/* prettier-ignore-end */
