// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sMdpLWyxbzDCruwMRffW2m
// Component: ntYs5RkH7Wwi

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import FilterRowSingle from "../../FilterRowSingle"; // plasmic-import: OC23iWRW1Dia/component
import Dialog from "../../Dialog"; // plasmic-import: FJiI2-N1is_F/component
import FilterListItem from "../../FilterListItem"; // plasmic-import: SBcorS0J8ajp/component
import LineClamp from "../../LineClamp"; // plasmic-import: fa_t7ELXcm5k/component
import FilterList from "../../FilterList"; // plasmic-import: qU4-tv66hXdh/component
import Button from "../../Button"; // plasmic-import: oVzoHzMf1TLl/component
import FilterExpertiseList from "../../FilterExpertiseList"; // plasmic-import: GKz-Lh1X9Vdq/component
import Chip from "../../Chip"; // plasmic-import: 1bFBcAoH0lNN/component

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_fragment_design_system_css from "../fragment_design_system/plasmic.module.css"; // plasmic-import: h9Dbk9ygddw7UVEq1NNhKi/projectcss
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: sMdpLWyxbzDCruwMRffW2m/projectcss
import sty from "./PlasmicFilterRow.module.css"; // plasmic-import: ntYs5RkH7Wwi/css

import ChevronRightIcon from "../fragment_icons/icons/PlasmicIcon__ChevronRight"; // plasmic-import: GHdF3hS-oP_3/icon
import ChevronLeftIcon from "../fragment_icons/icons/PlasmicIcon__ChevronLeft"; // plasmic-import: r9Upp9NbiZkf/icon
import SmileIcon from "../fragment_icons/icons/PlasmicIcon__Smile"; // plasmic-import: J8ozh55UiWsA/icon
import InfoIcon from "../fragment_icons/icons/PlasmicIcon__Info"; // plasmic-import: 7Dhq6fgU-utK/icon

createPlasmicElementProxy;

export type PlasmicFilterRow__VariantMembers = {};
export type PlasmicFilterRow__VariantsArgs = {};
type VariantPropType = keyof PlasmicFilterRow__VariantsArgs;
export const PlasmicFilterRow__VariantProps = new Array<VariantPropType>();

export type PlasmicFilterRow__ArgsType = {
  items?: any;
  onClick?: (name: string, value: string) => void;
  selectedSort?: string;
  onDelete?: (name: string, value: string) => void;
  countOfFilters?: string;
  onRemoveAllFilters?: () => void;
  isLoadingFilters?: boolean;
  isLanding?: boolean;
  searchCity?: any;
};
type ArgPropType = keyof PlasmicFilterRow__ArgsType;
export const PlasmicFilterRow__ArgProps = new Array<ArgPropType>(
  "items",
  "onClick",
  "selectedSort",
  "onDelete",
  "countOfFilters",
  "onRemoveAllFilters",
  "isLoadingFilters",
  "isLanding",
  "searchCity"
);

export type PlasmicFilterRow__OverridesType = {
  root?: Flex__<"div">;
  filterRowSingle?: Flex__<typeof FilterRowSingle>;
  sortDialog?: Flex__<typeof Dialog>;
  filterListDialog?: Flex__<typeof Dialog>;
  lineClamp?: Flex__<typeof LineClamp>;
  filterList?: Flex__<typeof FilterList>;
  categoriesDialog?: Flex__<typeof Dialog>;
  filterExpertiseList?: Flex__<typeof FilterExpertiseList>;
  optionsDialog?: Flex__<typeof Dialog>;
  chip?: Flex__<typeof Chip>;
};

export interface DefaultFilterRowProps {
  items?: any;
  onClick?: (name: string, value: string) => void;
  selectedSort?: string;
  onDelete?: (name: string, value: string) => void;
  countOfFilters?: string;
  onRemoveAllFilters?: () => void;
  isLoadingFilters?: boolean;
  isLanding?: boolean;
  searchCity?: any;
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicFilterRow__RenderFunc(props: {
  variants: PlasmicFilterRow__VariantsArgs;
  args: PlasmicFilterRow__ArgsType;
  overrides: PlasmicFilterRow__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {
          isLoadingFilters: false,
          isLanding: false
        },
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "filterListDialog.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "sortDialog.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "selectedFilterObject",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => ({
          title: "\u0646\u0648\u0639 \u0646\u062a\u0627\u06cc\u062c",
          name: "result_type",
          type: "radio",
          items: [
            {
              title:
                "\u067e\u0632\u0634\u06a9\u0627\u0646 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u06cc",
              value:
                "\u067e\u0632\u0634\u06a9\u0627\u0646 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u06cc",
              count: 125
            },
            {
              title:
                "\u067e\u0632\u0634\u06a9\u0627\u0646 \u0645\u0637\u0628\u06cc",
              value:
                "\u067e\u0632\u0634\u06a9\u0627\u0646 \u0645\u0637\u0628\u06cc",
              count: 243
            },
            {
              title: "\u0641\u0642\u0637 \u067e\u0632\u0634\u06a9\u0627\u0646",
              value: "\u0641\u0642\u0637 \u067e\u0632\u0634\u06a9\u0627\u0646",
              count: 314
            }
          ]
        })
      },
      {
        path: "optionsDialog.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "categoriesDialog.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "suggestionTags",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return [
                {
                  text: `پزشکان متخصص ${$props.searchCity.name}`,
                  url: `/s/${$props.searchCity.en_slug}/doctor`
                },
                {
                  text: `بیمارستان های ${$props.searchCity.name}`,
                  url: `/s/${$props.searchCity.en_slug}/center`
                }
              ];
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_fragment_design_system_css.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
      style={{ width: "100%" }}
    >
      {(() => {
        try {
          return !$props.isLanding;
        } catch (e) {
          if (
            e instanceof TypeError ||
            e?.plasmicType === "PlasmicUndefinedDataError"
          ) {
            return true;
          }
          throw e;
        }
      })() ? (
        <div
          className={classNames(projectcss.all, sty.freeBox__xFe0)}
          style={{ width: "100%" }}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(
              projectcss.all,
              sty.freeBox__dbjg,
              "no-scroll"
            )}
            id={"item-list"}
          >
            {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
              (() => {
                try {
                  return (() => {
                    const selected = $props.items.selected_filters;
                    const order_items = $props.items.order_items;
                    const allFilters = $props.items.filters;
                    const categories = $props.items.categories;
                    const additionalItems = [
                      {
                        title: "فیلتر ها",
                        name: "filters",
                        type: ""
                      },
                      {
                        title: !!$props.selectedSort
                          ? order_items[$props.selectedSort]
                          : "مرتب سازی",
                        name: "order_items",
                        type: ""
                      },
                      {
                        title: !!selected?.sub_category
                          ? categories
                              .find(cat => cat.value === selected.category)
                              ?.sub_categories.find(
                                sub => sub.value === selected.sub_category
                              ).title
                          : !!selected?.category
                          ? categories.find(
                              cat => cat.value === selected.category
                            ).title
                          : "تخصص",
                        name: "category",
                        type: "category"
                      }
                    ];

                    const customFilters =
                      $props.items.filters
                        ?.filter(item =>
                          ["radio", "switch"].includes(item.type)
                        )
                        .map(item => ({
                          ...item,
                          title: selected[item.name]
                            ? item.items?.find(
                                el => el.value === selected[item.name]
                              )?.title || item.title
                            : item.title
                        })) || [];
                    const filterList = [...additionalItems, ...customFilters];

                    const filters = filterList.sort((a, b) => {
                      if (a.name === "filters") return -1;
                      if (b.name === "filters") return 1;
                      return $props.items.selected_filters[a.name] ? -1 : 1;
                    });
                    return filters;
                  })();
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return [];
                  }
                  throw e;
                }
              })()
            ).map((__plasmic_item_0, __plasmic_idx_0) => {
              const currentItem = __plasmic_item_0;
              const currentIndex = __plasmic_idx_0;
              return (
                <FilterRowSingle
                  data-plasmic-name={"filterRowSingle"}
                  data-plasmic-override={overrides.filterRowSingle}
                  className={classNames("__wab_instance", sty.filterRowSingle)}
                  isSelected={(() => {
                    try {
                      return (
                        !!$props.items.selected_filters?.[currentItem.name] ||
                        (Object.keys($props.items.selected_filters).length >
                          0 &&
                          currentItem.name === "filters") ||
                        (!!$props.selectedSort &&
                          currentItem.name === "order_items")
                      );
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()}
                  key={currentIndex}
                  label={(() => {
                    try {
                      return currentItem.title;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()}
                  name={(() => {
                    try {
                      return currentItem.name;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()}
                  onClick={async name => {
                    const $steps = {};

                    $steps["openFiltersDialog"] =
                      name === "filters"
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["filterListDialog", "open"]
                              },
                              operation: 4
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              const oldValue = $stateGet(objRoot, variablePath);
                              $stateSet(objRoot, variablePath, !oldValue);
                              return !oldValue;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                    if (
                      $steps["openFiltersDialog"] != null &&
                      typeof $steps["openFiltersDialog"] === "object" &&
                      typeof $steps["openFiltersDialog"].then === "function"
                    ) {
                      $steps["openFiltersDialog"] = await $steps[
                        "openFiltersDialog"
                      ];
                    }

                    $steps["updateCategoriesDialogOpen"] =
                      name === "category"
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["categoriesDialog", "open"]
                              },
                              operation: 4
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              const oldValue = $stateGet(objRoot, variablePath);
                              $stateSet(objRoot, variablePath, !oldValue);
                              return !oldValue;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                    if (
                      $steps["updateCategoriesDialogOpen"] != null &&
                      typeof $steps["updateCategoriesDialogOpen"] ===
                        "object" &&
                      typeof $steps["updateCategoriesDialogOpen"].then ===
                        "function"
                    ) {
                      $steps["updateCategoriesDialogOpen"] = await $steps[
                        "updateCategoriesDialogOpen"
                      ];
                    }

                    $steps["openSortDialog"] =
                      currentItem.name === "order_items"
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["sortDialog", "open"]
                              },
                              operation: 4
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              const oldValue = $stateGet(objRoot, variablePath);
                              $stateSet(objRoot, variablePath, !oldValue);
                              return !oldValue;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                    if (
                      $steps["openSortDialog"] != null &&
                      typeof $steps["openSortDialog"] === "object" &&
                      typeof $steps["openSortDialog"].then === "function"
                    ) {
                      $steps["openSortDialog"] = await $steps["openSortDialog"];
                    }

                    $steps["toggleSwitch"] =
                      $props.items.filters?.find(filter => filter.name === name)
                        ?.type === "switch"
                        ? (() => {
                            const actionArgs = {
                              eventRef: $props["onClick"],
                              args: [
                                (() => {
                                  try {
                                    return name;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })(),
                                (() => {
                                  try {
                                    return !!$props.items.selected_filters[name]
                                      ? false
                                      : true;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              ]
                            };
                            return (({ eventRef, args }) => {
                              return eventRef?.(...(args ?? []));
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                    if (
                      $steps["toggleSwitch"] != null &&
                      typeof $steps["toggleSwitch"] === "object" &&
                      typeof $steps["toggleSwitch"].then === "function"
                    ) {
                      $steps["toggleSwitch"] = await $steps["toggleSwitch"];
                    }

                    $steps["setSelectedObject"] =
                      $props.items.filters?.find(filter => filter.name === name)
                        ?.type === "radio"
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["selectedFilterObject"]
                              },
                              operation: 0,
                              value: $props.items.filters.find(
                                filter => filter.name === name
                              )
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                    if (
                      $steps["setSelectedObject"] != null &&
                      typeof $steps["setSelectedObject"] === "object" &&
                      typeof $steps["setSelectedObject"].then === "function"
                    ) {
                      $steps["setSelectedObject"] = await $steps[
                        "setSelectedObject"
                      ];
                    }

                    $steps["updateOptionsDialogOpen"] =
                      $props.items.filters?.find(filter => filter.name === name)
                        ?.type === "radio"
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["optionsDialog", "open"]
                              },
                              operation: 4
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              const oldValue = $stateGet(objRoot, variablePath);
                              $stateSet(objRoot, variablePath, !oldValue);
                              return !oldValue;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                    if (
                      $steps["updateOptionsDialogOpen"] != null &&
                      typeof $steps["updateOptionsDialogOpen"] === "object" &&
                      typeof $steps["updateOptionsDialogOpen"].then ===
                        "function"
                    ) {
                      $steps["updateOptionsDialogOpen"] = await $steps[
                        "updateOptionsDialogOpen"
                      ];
                    }
                  }}
                  onDelete={async name => {
                    const $steps = {};

                    $steps["runOnDelete"] = true
                      ? (() => {
                          const actionArgs = {
                            eventRef: $props["onDelete"],
                            args: [
                              (() => {
                                try {
                                  return name;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })(),
                              (() => {
                                try {
                                  return $props.items.selected_filters[name];
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            ]
                          };
                          return (({ eventRef, args }) => {
                            return eventRef?.(...(args ?? []));
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runOnDelete"] != null &&
                      typeof $steps["runOnDelete"] === "object" &&
                      typeof $steps["runOnDelete"].then === "function"
                    ) {
                      $steps["runOnDelete"] = await $steps["runOnDelete"];
                    }
                  }}
                />
              );
            })}
          </Stack__>
          <Dialog
            data-plasmic-name={"sortDialog"}
            data-plasmic-override={overrides.sortDialog}
            body={
              <FilterListItem
                className={classNames(
                  "__wab_instance",
                  sty.filterListItem__qVlOy
                )}
                isLastChild={true}
                item={(() => {
                  try {
                    return (() => {
                      const list = $props.items.order_items;
                      const items = Object.keys(list).map(key => ({
                        title: list[key],
                        value: key
                      }));
                      const sort = {
                        title: "",
                        type: "radio",
                        name: "sortBy",
                        items: [...items]
                      };
                      return sort;
                    })();
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
                onClick={async (value, name) => {
                  const $steps = {};

                  $steps["runOnClick"] = true
                    ? (() => {
                        const actionArgs = {
                          eventRef: $props["onClick"],
                          args: [
                            (() => {
                              try {
                                return name;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })(),
                            (() => {
                              try {
                                return value;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          ]
                        };
                        return (({ eventRef, args }) => {
                          return eventRef?.(...(args ?? []));
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["runOnClick"] != null &&
                    typeof $steps["runOnClick"] === "object" &&
                    typeof $steps["runOnClick"].then === "function"
                  ) {
                    $steps["runOnClick"] = await $steps["runOnClick"];
                  }

                  $steps["updateSortDialogOpen"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["sortDialog", "open"]
                          },
                          operation: 4
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          const oldValue = $stateGet(objRoot, variablePath);
                          $stateSet(objRoot, variablePath, !oldValue);
                          return !oldValue;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateSortDialogOpen"] != null &&
                    typeof $steps["updateSortDialogOpen"] === "object" &&
                    typeof $steps["updateSortDialogOpen"].then === "function"
                  ) {
                    $steps["updateSortDialogOpen"] = await $steps[
                      "updateSortDialogOpen"
                    ];
                  }

                  $steps["runCode"] = true
                    ? (() => {
                        const actionArgs = {
                          customFunction: async () => {
                            return (() => {
                              if (typeof window != "undefined") {
                                const items =
                                  globalThis.window.document.getElementById(
                                    "item-list"
                                  );
                                if (items) {
                                  return items.scrollTo({
                                    left: 0,
                                    behavior: "smooth"
                                  });
                                }
                              }
                            })();
                          }
                        };
                        return (({ customFunction }) => {
                          return customFunction();
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["runCode"] != null &&
                    typeof $steps["runCode"] === "object" &&
                    typeof $steps["runCode"].then === "function"
                  ) {
                    $steps["runCode"] = await $steps["runCode"];
                  }
                }}
                selected={(() => {
                  try {
                    return $props.selectedSort;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
              />
            }
            className={classNames("__wab_instance", sty.sortDialog)}
            noTrigger={true}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["sortDialog", "open"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            open={generateStateValueProp($state, ["sortDialog", "open"])}
            title={"\u0645\u0631\u062a\u0628 \u0633\u0627\u0632\u06cc"}
            trigger={null}
          />

          <Dialog
            data-plasmic-name={"filterListDialog"}
            data-plasmic-override={overrides.filterListDialog}
            body={
              <div className={classNames(projectcss.all, sty.freeBox__psYtf)}>
                <div className={classNames(projectcss.all, sty.freeBox__mZLm)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__n8D9U)}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateCategoriesDialogOpen"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["categoriesDialog", "open"]
                              },
                              operation: 0,
                              value: true
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateCategoriesDialogOpen"] != null &&
                        typeof $steps["updateCategoriesDialogOpen"] ===
                          "object" &&
                        typeof $steps["updateCategoriesDialogOpen"].then ===
                          "function"
                      ) {
                        $steps["updateCategoriesDialogOpen"] = await $steps[
                          "updateCategoriesDialogOpen"
                        ];
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uefUm
                      )}
                    >
                      {"\u062a\u062e\u0635\u0635 \u0647\u0627"}
                    </div>
                    <LineClamp
                      data-plasmic-name={"lineClamp"}
                      data-plasmic-override={overrides.lineClamp}
                      className={classNames("__wab_instance", sty.lineClamp)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wnBxJ
                        )}
                      >
                        <React.Fragment>
                          {(() => {
                            try {
                              return (() => {
                                function findCategoryName(value) {
                                  return $props.items.categories.find(
                                    item => item.value == value
                                  );
                                }
                                return $props.items.selected_filters
                                  ?.sub_category
                                  ? $props.items.categories
                                      .find(
                                        item =>
                                          item.value ==
                                          $props.items.selected_filters
                                            ?.category
                                      )
                                      .sub_categories.find(
                                        cat =>
                                          cat.value ==
                                          $props.items.selected_filters
                                            .sub_category
                                      ).title
                                  : findCategoryName(
                                      $props.items.selected_filters?.category
                                    )?.title || "انتخاب کنید";
                              })();
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return "";
                              }
                              throw e;
                            }
                          })()}
                        </React.Fragment>
                      </div>
                    </LineClamp>
                  </div>
                  <FilterList
                    data-plasmic-name={"filterList"}
                    data-plasmic-override={overrides.filterList}
                    className={classNames("__wab_instance", sty.filterList)}
                    filters={[
                      {
                        title:
                          "\u0646\u0648\u0639 \u0646\u062a\u0627\u06cc\u062c",
                        name: "result_type",
                        type: "radio",
                        items: [
                          {
                            title:
                              "\u067e\u0632\u0634\u06a9\u0627\u0646 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u06cc",
                            value:
                              "\u067e\u0632\u0634\u06a9\u0627\u0646 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u06cc",
                            count: 1794
                          },
                          {
                            title:
                              "\u067e\u0632\u0634\u06a9\u0627\u0646 \u0645\u0637\u0628\u06cc",
                            value:
                              "\u067e\u0632\u0634\u06a9\u0627\u0646 \u0645\u0637\u0628\u06cc",
                            count: 59707
                          },
                          {
                            title:
                              "\u0641\u0642\u0637 \u067e\u0632\u0634\u06a9\u0627\u0646",
                            value:
                              "\u0641\u0642\u0637 \u067e\u0632\u0634\u06a9\u0627\u0646",
                            count: 60907
                          }
                        ]
                      },
                      {
                        title:
                          "\u062c\u0646\u0633\u06cc\u062a \u067e\u0632\u0634\u06a9",
                        name: "gender",
                        type: "radio",
                        items: [
                          {
                            title: "\u062e\u0627\u0646\u0645",
                            value: "female",
                            count: 2332
                          },
                          {
                            title: "\u0622\u0642\u0627",
                            value: "male",
                            count: 130
                          }
                        ]
                      },
                      {
                        title:
                          "\u062f\u0631\u062c\u0647 \u0639\u0644\u0645\u06cc",
                        name: "degree",
                        type: "radio",
                        items: [
                          {
                            title: "\u0641\u0644\u0648\u0634\u06cc\u067e",
                            value: "\u0641\u0644\u0648\u0634\u06cc\u067e",
                            count: 652
                          },
                          {
                            title:
                              "\u0641\u0648\u0642 \u062a\u062e\u0635\u0635",
                            value:
                              "\u0641\u0648\u0642 \u062a\u062e\u0635\u0635",
                            count: 4
                          },
                          {
                            title:
                              "\u062f\u06a9\u062a\u0631\u0627\u06cc \u062a\u062e\u0635\u0635\u06cc",
                            value:
                              "\u062f\u06a9\u062a\u0631\u0627\u06cc \u062a\u062e\u0635\u0635\u06cc",
                            count: 134
                          },
                          {
                            title: "\u0645\u062a\u062e\u0635\u0635",
                            value: "\u0645\u062a\u062e\u0635\u0635",
                            count: 8485
                          },
                          {
                            title: "\u062f\u06a9\u062a\u0631\u06cc",
                            value: "\u062f\u06a9\u062a\u0631\u0627\u06cc",
                            count: 4209
                          },
                          {
                            title:
                              "\u06a9\u0627\u0631\u0634\u0646\u0627\u0633 \u0627\u0631\u0634\u062f",
                            value:
                              "\u06a9\u0627\u0631\u0634\u0646\u0627\u0633 \u0627\u0631\u0634\u062f",
                            count: 1529
                          },
                          {
                            title: "\u06a9\u0627\u0631\u0634\u0646\u0627\u0633",
                            value: "\u06a9\u0627\u0631\u0634\u0646\u0627\u0633",
                            count: 52080
                          }
                        ]
                      },
                      {
                        title: "\u062e\u062f\u0645\u062a",
                        name: "turn_type",
                        type: "radio",
                        items: [
                          {
                            title:
                              "\u0646\u0648\u0628\u062a \u062d\u0636\u0648\u0631\u06cc",
                            value: "non-consult",
                            count: 60907
                          },
                          {
                            title:
                              "\u0648\u06cc\u0632\u06cc\u062a \u0622\u0646\u0644\u0627\u06cc\u0646",
                            value: "consult",
                            count: 1884
                          }
                        ]
                      },
                      {
                        title:
                          "\u062e\u0648\u0634 \u0628\u0631\u062e\u0648\u0631\u062f",
                        name: "good_behave_doctor",
                        type: "switch"
                      },
                      {
                        title: "\u0645\u062d\u0628\u0648\u0628",
                        name: "popular_doctor",
                        type: "switch"
                      },
                      {
                        title:
                          "\u06a9\u0645\u062a\u0631\u06cc\u0646 \u0645\u0639\u0637\u0644\u06cc",
                        name: "less_waiting_time_doctor",
                        type: "switch"
                      },
                      {
                        title:
                          "\u0646\u0633\u062e\u0647 \u0646\u0648\u06cc\u0633\u06cc \u0622\u0646\u0644\u0627\u06cc\u0646",
                        name: "has_prescription",
                        type: "switch"
                      },
                      {
                        title:
                          "\u0632\u0645\u0627\u0646 \u0646\u0648\u0628\u062a",
                        name: "work_time_frames",
                        type: "multiple_select",
                        items: [
                          {
                            title: "\u0634\u0628",
                            value: "night",
                            count: 14734
                          },
                          {
                            title:
                              "\u0628\u0639\u062f \u0627\u0632 \u0638\u0647\u0631",
                            value: "afternoon",
                            count: 11945
                          },
                          {
                            title: "\u0635\u0628\u062d",
                            value: "morning",
                            count: 9670
                          }
                        ]
                      },
                      {
                        title:
                          "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646",
                        name: "hospital_affiliation",
                        type: "multiple_select",
                        items: [
                          {
                            title:
                              "\u0645\u0631\u06a9\u0632 \u0627\u0645\u0648\u0632\u0634\u06cc \u062f\u0631\u0645\u0627\u0646\u06cc \u062d\u0636\u0631\u062a \u0632\u06cc\u0646\u0628 \u0634\u06cc\u0631\u0627\u0632",
                            value:
                              "\u0645\u0631\u06a9\u0632 \u0627\u0645\u0648\u0632\u0634\u06cc \u062f\u0631\u0645\u0627\u0646\u06cc \u062d\u0636\u0631\u062a \u0632\u06cc\u0646\u0628 \u0634\u06cc\u0631\u0627\u0632",
                            count: 46
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0648 \u062f\u0627\u0631\u0627\u0644\u0634\u0641\u0627 \u062d\u0636\u0631\u062a \u0632\u0647\u0631\u0627\u06cc \u0645\u0631\u0636\u06cc\u0647 \u0633",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0648 \u062f\u0627\u0631\u0627\u0644\u0634\u0641\u0627 \u062d\u0636\u0631\u062a \u0632\u0647\u0631\u0627\u06cc \u0645\u0631\u0636\u06cc\u0647 \u0633",
                            count: 38
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0647\u06cc\u062f \u0628\u0647\u0634\u062a\u06cc \u0627\u0635\u0641\u0647\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0647\u06cc\u062f \u0628\u0647\u0634\u062a\u06cc \u0627\u0635\u0641\u0647\u0627\u0646",
                            count: 38
                          },
                          {
                            title:
                              "\u0645\u0631\u06a9\u0632 \u062f\u0631\u0645\u0627\u0646\u06cc \u0645\u0627\u0645",
                            value:
                              "\u0645\u0631\u06a9\u0632 \u062f\u0631\u0645\u0627\u0646\u06cc \u0645\u0627\u0645",
                            count: 34
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0645\u0627\u062f\u0631 \u0648 \u06a9\u0648\u062f\u06a9 \u0634\u0648\u0634\u062a\u0631\u06cc",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0645\u0627\u062f\u0631 \u0648 \u06a9\u0648\u062f\u06a9 \u0634\u0648\u0634\u062a\u0631\u06cc",
                            count: 34
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u062e\u0627\u0646\u0648\u0627\u062f\u0647 \u0627\u0635\u0641\u0647\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u062e\u0627\u0646\u0648\u0627\u062f\u0647 \u0627\u0635\u0641\u0647\u0627\u0646",
                            count: 32
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0639\u0631\u0641\u0627\u0646 \u0646\u06cc\u0627\u06cc\u0634",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0639\u0631\u0641\u0627\u0646 \u0646\u06cc\u0627\u06cc\u0634",
                            count: 31
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0646\u06cc\u06a9\u0627\u0646",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0646\u06cc\u06a9\u0627\u0646",
                            count: 30
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0647\u06cc\u062f \u0645\u0637\u0647\u0631\u06cc \u0645\u0631\u0648\u062f\u0634\u062a",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0647\u06cc\u062f \u0645\u0637\u0647\u0631\u06cc \u0645\u0631\u0648\u062f\u0634\u062a",
                            count: 30
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0644\u0627\u0644\u0647",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0644\u0627\u0644\u0647",
                            count: 30
                          },
                          {
                            title:
                              "\u0645\u0631\u06a9\u0632 \u0622\u0645\u0648\u0632\u0634\u06cc \u062f\u0631\u0645\u0627\u0646\u06cc \u062d\u0627\u0641\u0638",
                            value:
                              "\u0645\u0631\u06a9\u0632 \u0622\u0645\u0648\u0632\u0634\u06cc \u062f\u0631\u0645\u0627\u0646\u06cc \u062d\u0627\u0641\u0638",
                            count: 27
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0646\u06cc\u06a9\u0627\u0646 \u063a\u0631\u0628 \u062a\u0647\u0631\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0646\u06cc\u06a9\u0627\u0646 \u063a\u0631\u0628 \u062a\u0647\u0631\u0627\u0646",
                            count: 25
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0628\u0648\u0633\u062a\u0627\u0646 \u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0628\u0648\u0633\u062a\u0627\u0646 \u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
                            count: 22
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u067e\u06cc\u0627\u0645\u0628\u0631\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u067e\u06cc\u0627\u0645\u0628\u0631\u0627\u0646",
                            count: 22
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0628\u0647\u0645\u0646 \u062a\u0647\u0631\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0628\u0647\u0645\u0646 \u062a\u0647\u0631\u0627\u0646",
                            count: 21
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0646\u0642\u0648\u06cc \u06a9\u0627\u0634\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0646\u0642\u0648\u06cc \u06a9\u0627\u0634\u0627\u0646",
                            count: 21
                          },
                          {
                            title:
                              "\u0645\u0631\u06a9\u0632-\u0634\u0647\u06cc\u062f-\u0645\u0637\u0647\u0631\u06cc-\u0634\u06cc\u0631\u0627\u0632",
                            value:
                              "\u0645\u0631\u06a9\u0632-\u0634\u0647\u06cc\u062f-\u0645\u0637\u0647\u0631\u06cc-\u0634\u06cc\u0631\u0627\u0632",
                            count: 21
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0645\u062d\u0628 \u06a9\u0648\u062b\u0631",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0645\u062d\u0628 \u06a9\u0648\u062b\u0631",
                            count: 21
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0645\u0639\u062a\u0636\u062f\u06cc \u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0645\u0639\u062a\u0636\u062f\u06cc \u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
                            count: 20
                          },
                          {
                            title:
                              "\u0645\u062c\u062a\u0645\u0639 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u06cc \u0627\u0645\u0627\u0645 \u062e\u0645\u06cc\u0646\u06cc (\u0631\u0647) \u062f\u0631\u0645\u0627\u0646\u06af\u0627\u0647\u0647\u0627\u06cc \u0633\u0627\u062e\u062a\u0645\u0627\u0646 \u0627\u0645\u0627\u0645 \u062e\u0645\u06cc\u0646\u06cc (\u0645\u063a\u0632\u0648\u0627\u0639\u0635\u0627\u0628)",
                            value:
                              "\u0645\u062c\u062a\u0645\u0639 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u06cc \u0627\u0645\u0627\u0645 \u062e\u0645\u06cc\u0646\u06cc (\u0631\u0647) \u062f\u0631\u0645\u0627\u0646\u06af\u0627\u0647\u0647\u0627\u06cc \u0633\u0627\u062e\u062a\u0645\u0627\u0646 \u0627\u0645\u0627\u0645 \u062e\u0645\u06cc\u0646\u06cc (\u0645\u063a\u0632\u0648\u0627\u0639\u0635\u0627\u0628)",
                            count: 20
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0631\u0636\u0648\u06cc \u0645\u0634\u0647\u062f",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0631\u0636\u0648\u06cc \u0645\u0634\u0647\u062f",
                            count: 20
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062d\u0636\u0631\u062a \u0627\u0628\u0648\u0627\u0644\u0641\u0636\u0644 (\u0639) \u0645\u06cc\u0646\u0627\u0628",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062d\u0636\u0631\u062a \u0627\u0628\u0648\u0627\u0644\u0641\u0636\u0644 (\u0639) \u0645\u06cc\u0646\u0627\u0628",
                            count: 19
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0631\u06cc\u0639\u062a\u06cc \u062a\u0647\u0631\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0631\u06cc\u0639\u062a\u06cc \u062a\u0647\u0631\u0627\u0646",
                            count: 19
                          },
                          {
                            title:
                              "\u0645\u0631\u06a9\u0632 \u0622\u0645\u0648\u0632\u0634\u06cc \u062f\u0631\u0645\u0627\u0646\u06cc \u0634\u0647\u06cc\u062f \u0631\u062d\u06cc\u0645\u06cc \u062e\u0631\u0645 \u0622\u0628\u0627\u062f",
                            value:
                              "\u0645\u0631\u06a9\u0632 \u0622\u0645\u0648\u0632\u0634\u06cc \u062f\u0631\u0645\u0627\u0646\u06cc \u0634\u0647\u06cc\u062f \u0631\u062d\u06cc\u0645\u06cc \u062e\u0631\u0645 \u0622\u0628\u0627\u062f",
                            count: 18
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u062a\u062e\u062a \u062c\u0645\u0634\u06cc\u062f",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u062a\u062e\u062a \u062c\u0645\u0634\u06cc\u062f",
                            count: 17
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0627\u0642\u0628\u0627\u0644",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0627\u0642\u0628\u0627\u0644",
                            count: 17
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0644\u0632\u0647\u0631\u0627 \u0627\u0635\u0641\u0647\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0644\u0632\u0647\u0631\u0627 \u0627\u0635\u0641\u0647\u0627\u0646",
                            count: 17
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u0648\u0632\u0634\u06cc \u062f\u0631\u0645\u0627\u0646\u06cc \u0634\u0647\u06cc\u062f\u0627\u0646 \u0645\u0628\u06cc\u0646\u06cc \u0633\u0628\u0632\u0648\u0627\u0631",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u0648\u0632\u0634\u06cc \u062f\u0631\u0645\u0627\u0646\u06cc \u0634\u0647\u06cc\u062f\u0627\u0646 \u0645\u0628\u06cc\u0646\u06cc \u0633\u0628\u0632\u0648\u0627\u0631",
                            count: 17
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0646\u06cc\u06a9\u0627\u0646 \u0633\u067e\u06cc\u062f",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0646\u06cc\u06a9\u0627\u0646 \u0633\u067e\u06cc\u062f",
                            count: 16
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0631\u06cc\u0639\u062a\u06cc \u0647\u0631\u0645\u0632\u06af\u0627\u0646",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0631\u06cc\u0639\u062a\u06cc \u0647\u0631\u0645\u0632\u06af\u0627\u0646",
                            count: 16
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0634\u0647\u062f\u0627\u06cc \u062e\u0644\u06cc\u062c \u0641\u0627\u0631\u0633 \u0628\u0648\u0634\u0647\u0631",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0634\u0647\u062f\u0627\u06cc \u062e\u0644\u06cc\u062c \u0641\u0627\u0631\u0633 \u0628\u0648\u0634\u0647\u0631",
                            count: 16
                          },
                          {
                            title:
                              "\u062f\u0631\u0645\u0627\u0646\u06af\u0627\u0647 \u0647\u0627\u06cc \u062a\u062e\u0635\u0635\u06cc \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0628\u0646\u062a \u0627\u0644\u0647\u062f\u06cc",
                            value:
                              "\u062f\u0631\u0645\u0627\u0646\u06af\u0627\u0647 \u0647\u0627\u06cc \u062a\u062e\u0635\u0635\u06cc \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0628\u0646\u062a \u0627\u0644\u0647\u062f\u06cc",
                            count: 16
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0647\u06cc\u062f \u0645\u0635\u0637\u0641\u06cc \u062e\u0645\u06cc\u0646\u06cc \u062a\u0647\u0631\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0647\u06cc\u062f \u0645\u0635\u0637\u0641\u06cc \u062e\u0645\u06cc\u0646\u06cc \u062a\u0647\u0631\u0627\u0646",
                            count: 15
                          },
                          {
                            title:
                              "\u067e\u0644\u06cc \u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0634\u0645\u0627\u0631\u0647 \u062f\u0648 \u062f\u0627\u0646\u0634\u06af\u0627\u0647 \u0633\u0645\u0646\u0627\u0646",
                            value:
                              "\u067e\u0644\u06cc \u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0634\u0645\u0627\u0631\u0647 \u062f\u0648 \u062f\u0627\u0646\u0634\u06af\u0627\u0647 \u0633\u0645\u0646\u0627\u0646",
                            count: 15
                          },
                          {
                            title:
                              "\u0645\u0631\u06a9\u0632 \u067e\u0632\u0634\u06a9\u06cc \u0634\u0645\u0633 \u0634\u0631\u0642",
                            value:
                              "\u0645\u0631\u06a9\u0632 \u067e\u0632\u0634\u06a9\u06cc \u0634\u0645\u0633 \u0634\u0631\u0642",
                            count: 15
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u062a\u0631\u06cc\u062a\u0627",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u062a\u0631\u06cc\u062a\u0627",
                            count: 15
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062d\u0636\u0631\u062a \u0648\u0644\u06cc\u0639\u0635\u0631 \u0645\u0645\u0633\u0646\u06cc",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062d\u0636\u0631\u062a \u0648\u0644\u06cc\u0639\u0635\u0631 \u0645\u0645\u0633\u0646\u06cc",
                            count: 14
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0647\u06cc\u062f \u0641\u0642\u06cc\u0647\u06cc \u0634\u06cc\u0631\u0627\u0632",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0647\u06cc\u062f \u0641\u0642\u06cc\u0647\u06cc \u0634\u06cc\u0631\u0627\u0632",
                            count: 14
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u0627\u0645 \u0645\u0648\u0633\u06cc \u06a9\u0627\u0638\u0645 \u0632\u0631\u06cc\u0646 \u062f\u0634\u062a",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u0627\u0645 \u0645\u0648\u0633\u06cc \u06a9\u0627\u0638\u0645 \u0632\u0631\u06cc\u0646 \u062f\u0634\u062a",
                            count: 14
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0648\u06cc\u0698\u0647 \u06a9\u0648\u062b\u0631 \u0642\u0632\u0648\u06cc\u0646 (\u0639\u0635\u0631)",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0648\u06cc\u0698\u0647 \u06a9\u0648\u062b\u0631 \u0642\u0632\u0648\u06cc\u0646 (\u0639\u0635\u0631)",
                            count: 14
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0648\u0644\u06cc\u0639\u0635\u0631 \u0639\u062c \u062c\u063a\u062a\u0627\u06cc",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0648\u0644\u06cc\u0639\u0635\u0631 \u0639\u062c \u062c\u063a\u062a\u0627\u06cc",
                            count: 14
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u067e\u0627\u0633\u062a\u0648\u0631 \u0628\u0645",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u067e\u0627\u0633\u062a\u0648\u0631 \u0628\u0645",
                            count: 14
                          },
                          {
                            title:
                              "\u0645\u062c\u062a\u0645\u0639 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u06cc \u06cc\u0627\u0633",
                            value:
                              "\u0645\u062c\u062a\u0645\u0639 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u06cc \u06cc\u0627\u0633",
                            count: 14
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u06cc\u0631\u0627\u0644\u0645\u0648\u0645\u0646\u06cc\u0646 \u0639\u0644\u06cc (\u0639) \u062a\u0628\u0631\u06cc\u0632",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u06cc\u0631\u0627\u0644\u0645\u0648\u0645\u0646\u06cc\u0646 \u0639\u0644\u06cc (\u0639) \u062a\u0628\u0631\u06cc\u0632",
                            count: 13
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u062f\u0627\u0646\u0634\u06af\u0627\u0647 \u0639\u0644\u0648\u0645 \u067e\u0632\u0634\u06a9\u06cc \u0628\u0648\u0634\u0647\u0631",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u062f\u0627\u0646\u0634\u06af\u0627\u0647 \u0639\u0644\u0648\u0645 \u067e\u0632\u0634\u06a9\u06cc \u0628\u0648\u0634\u0647\u0631",
                            count: 13
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0648\u06cc\u0698\u0647 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0633\u0628\u0632\u0648\u0627\u0631",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0648\u06cc\u0698\u0647 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0633\u0628\u0632\u0648\u0627\u0631",
                            count: 13
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u06cc\u0646 \u0627\u0635\u0641\u0647\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u06cc\u0646 \u0627\u0635\u0641\u0647\u0627\u0646",
                            count: 13
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0647\u062f\u0627\u0621 \u0646\u06cc \u0631\u06cc\u0632",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0647\u062f\u0627\u0621 \u0646\u06cc \u0631\u06cc\u0632",
                            count: 13
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0628\u0647\u0627\u0631\u0644\u0648",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0628\u0647\u0627\u0631\u0644\u0648",
                            count: 13
                          },
                          {
                            title:
                              "\u0645\u0631\u06a9\u0632 \u0622\u0645\u0648\u0632\u0634\u06cc \u0648 \u062f\u0631\u0645\u0627\u0646\u06cc \u0634\u0647\u06cc\u062f \u06cc\u062d\u06cc\u06cc \u0646\u0698\u0627\u062f \u0628\u0627\u0628\u0644",
                            value:
                              "\u0645\u0631\u06a9\u0632 \u0622\u0645\u0648\u0632\u0634\u06cc \u0648 \u062f\u0631\u0645\u0627\u0646\u06cc \u0634\u0647\u06cc\u062f \u06cc\u062d\u06cc\u06cc \u0646\u0698\u0627\u062f \u0628\u0627\u0628\u0644",
                            count: 13
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0634\u0647\u06cc\u062f \u0645\u0641\u062a\u062d 1 \u062c\u062f\u06cc\u062f \u06af\u0644\u0633\u062a\u0627\u0646 15",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0634\u0647\u06cc\u062f \u0645\u0641\u062a\u062d 1 \u062c\u062f\u06cc\u062f \u06af\u0644\u0633\u062a\u0627\u0646 15",
                            count: 12
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0645\u0631\u062a\u0627\u0636",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0645\u0631\u062a\u0627\u0636",
                            count: 12
                          },
                          {
                            title:
                              "\u062f\u0631\u0645\u0627\u0646\u06af\u0627\u0647 \u0647\u0627\u06cc \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0628\u0647\u0627\u0631 \u0634\u0627\u0647\u0631\u0648\u062f",
                            value:
                              "\u062f\u0631\u0645\u0627\u0646\u06af\u0627\u0647 \u0647\u0627\u06cc \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0628\u0647\u0627\u0631 \u0634\u0627\u0647\u0631\u0648\u062f",
                            count: 12
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062d\u0636\u0631\u062a \u0648\u0644\u06cc\u0639\u0635\u0631\u0644\u0627\u0645\u0631\u062f",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062d\u0636\u0631\u062a \u0648\u0644\u06cc\u0639\u0635\u0631\u0644\u0627\u0645\u0631\u062f",
                            count: 12
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0648\u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0627\u0645\u0627\u0645 \u0639\u0644\u06cc (\u0639 ) \u0634\u0647\u0631\u06a9\u0631\u062f",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0648\u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0627\u0645\u0627\u0645 \u0639\u0644\u06cc (\u0639 ) \u0634\u0647\u0631\u06a9\u0631\u062f",
                            count: 12
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062d\u0636\u0631\u062a \u0648\u0644\u06cc \u0639\u0635\u0631 \u0628\u0648\u0627\u0646\u0627\u062a",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062d\u0636\u0631\u062a \u0648\u0644\u06cc \u0639\u0635\u0631 \u0628\u0648\u0627\u0646\u0627\u062a",
                            count: 12
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0645\u0641\u0631\u062d",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0645\u0641\u0631\u062d",
                            count: 12
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062d\u0636\u0631\u062a \u062d\u062c\u062a \u0628\u0646 \u0627\u0644\u062d\u0633\u0646 \u0639\u0633\u06a9\u0631\u06cc",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062d\u0636\u0631\u062a \u062d\u062c\u062a \u0628\u0646 \u0627\u0644\u062d\u0633\u0646 \u0639\u0633\u06a9\u0631\u06cc",
                            count: 11
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0627\u0645\u0627\u0645 \u0631\u0636\u0627 \u0634\u0645\u0627\u0631\u0647 2 (\u0630\u06a9\u0631\u06cc\u0627)",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0627\u0645\u0627\u0645 \u0631\u0636\u0627 \u0634\u0645\u0627\u0631\u0647 2 (\u0630\u06a9\u0631\u06cc\u0627)",
                            count: 11
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0641\u0631\u0647\u06cc\u062e\u062a\u06af\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0641\u0631\u0647\u06cc\u062e\u062a\u06af\u0627\u0646",
                            count: 11
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u0627\u0645 \u0631\u0636\u0627(\u0639) - \u0645\u0634\u0647\u062f",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u0627\u0645 \u0631\u0636\u0627(\u0639) - \u0645\u0634\u0647\u062f",
                            count: 11
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0641\u0631\u062c \u0627\u0644\u0644\u0647 \u0631\u0636\u0627 \u0632\u0627\u062f\u0647 \u0642\u0627\u0626\u0645\u06cc\u0647",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0641\u0631\u062c \u0627\u0644\u0644\u0647 \u0631\u0636\u0627 \u0632\u0627\u062f\u0647 \u0642\u0627\u0626\u0645\u06cc\u0647",
                            count: 11
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0647\u062f\u0627\u06cc \u0644\u0646\u062c\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0647\u062f\u0627\u06cc \u0644\u0646\u062c\u0627\u0646",
                            count: 11
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u06a9\u0648\u062b\u0631 \u0642\u0632\u0648\u06cc\u0646 (\u0635\u0628\u062d)",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u06a9\u0648\u062b\u0631 \u0642\u0632\u0648\u06cc\u0646 (\u0635\u0628\u062d)",
                            count: 11
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0639\u06cc\u0633\u06cc \u0627\u0628\u0646 \u0645\u0631\u06cc\u0645 \u0627\u0635\u0641\u0647\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0639\u06cc\u0633\u06cc \u0627\u0628\u0646 \u0645\u0631\u06cc\u0645 \u0627\u0635\u0641\u0647\u0627\u0646",
                            count: 11
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062e\u06cc\u0627\u0645 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u062d\u06a9\u06cc\u0645",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062e\u06cc\u0627\u0645 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u062d\u06a9\u06cc\u0645",
                            count: 11
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0647\u06cc\u062f \u0628\u0647\u0634\u062a\u06cc \u06a9\u0627\u0634\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0634\u0647\u06cc\u062f \u0628\u0647\u0634\u062a\u06cc \u06a9\u0627\u0634\u0627\u0646",
                            count: 11
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0644\u0632\u0647\u0631\u0627 \u0627\u0635\u0641\u0647\u0627\u0646 (\u062f\u0631\u0645\u0627\u0646\u06af\u0627\u0647 \u0635\u0628\u062d)",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0644\u0632\u0647\u0631\u0627 \u0627\u0635\u0641\u0647\u0627\u0646 (\u062f\u0631\u0645\u0627\u0646\u06af\u0627\u0647 \u0635\u0628\u062d)",
                            count: 11
                          },
                          {
                            title:
                              "\u0645\u0631\u06a9\u0632 \u062a\u062d\u0642\u06cc\u0642\u0627\u062a\u06cc \u062f\u0631\u0645\u0627\u0646\u06cc \u0646\u0627\u0628\u0627\u0631\u0648\u0631\u06cc \u0645\u06cc\u0644\u0627\u062f - \u0645\u0634\u0647\u062f",
                            value:
                              "\u0645\u0631\u06a9\u0632 \u062a\u062d\u0642\u06cc\u0642\u0627\u062a\u06cc \u062f\u0631\u0645\u0627\u0646\u06cc \u0646\u0627\u0628\u0627\u0631\u0648\u0631\u06cc \u0645\u06cc\u0644\u0627\u062f - \u0645\u0634\u0647\u062f",
                            count: 10
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u06cc\u0631\u0627\u0644\u0645\u0648\u0645\u0646\u06cc\u0646 \u0633\u0645\u0646\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u06cc\u0631\u0627\u0644\u0645\u0648\u0645\u0646\u06cc\u0646 \u0633\u0645\u0646\u0627\u0646",
                            count: 10
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0633\u0631\u062f\u0627\u0631 \u0633\u0644\u06cc\u0645\u0627\u0646\u06cc \u0628\u0631\u0648\u062c\u0646",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0633\u0631\u062f\u0627\u0631 \u0633\u0644\u06cc\u0645\u0627\u0646\u06cc \u0628\u0631\u0648\u062c\u0646",
                            count: 10
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0627\u0644\u0632\u0647\u0631\u0627 (\u0633) \u0628\u0645",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0627\u0644\u0632\u0647\u0631\u0627 (\u0633) \u0628\u0645",
                            count: 10
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062b\u0627\u0645\u0646 \u0627\u0644\u062d\u062c\u062c \u0639 \u0622\u0631\u0627\u0646 \u0648 \u0628\u06cc\u062f\u06af\u0644",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062b\u0627\u0645\u0646 \u0627\u0644\u062d\u062c\u062c \u0639 \u0622\u0631\u0627\u0646 \u0648 \u0628\u06cc\u062f\u06af\u0644",
                            count: 10
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0647\u0641\u062f\u0647 \u0634\u0647\u0631\u06cc\u0648\u0631 \u0628\u0631\u0627\u0632\u062c\u0627\u0646",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0647\u0641\u062f\u0647 \u0634\u0647\u0631\u06cc\u0648\u0631 \u0628\u0631\u0627\u0632\u062c\u0627\u0646",
                            count: 10
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0645\u06cc\u0644\u0627\u062f \u0627\u0635\u0641\u0647\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0645\u06cc\u0644\u0627\u062f \u0627\u0635\u0641\u0647\u0627\u0646",
                            count: 10
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0634\u0647\u062f\u0627 \u0644\u0631\u062f\u06af\u0627\u0646",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0634\u0647\u062f\u0627 \u0644\u0631\u062f\u06af\u0627\u0646",
                            count: 10
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062f\u06a9\u062a\u0631 \u0639\u0644\u06cc \u0634\u0631\u06cc\u0639\u062a\u06cc - \u0645\u0634\u0647\u062f",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062f\u06a9\u062a\u0631 \u0639\u0644\u06cc \u0634\u0631\u06cc\u0639\u062a\u06cc - \u0645\u0634\u0647\u062f",
                            count: 9
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u0627\u0645 \u0639\u0644\u06cc (\u0639) \u0631\u0648\u062f\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u0627\u0645 \u0639\u0644\u06cc (\u0639) \u0631\u0648\u062f\u0627\u0646",
                            count: 9
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0648\u06cc\u0698\u0647 \u0645\u0633\u062a\u0642\u0644 \u0627\u062d\u0645\u062f\u06cc\u0647",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0648\u06cc\u0698\u0647 \u0645\u0633\u062a\u0642\u0644 \u0627\u062d\u0645\u062f\u06cc\u0647",
                            count: 9
                          },
                          {
                            title:
                              "\u062f\u06cc \u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0646\u06cc\u06a9\u0627\u0646",
                            value:
                              "\u062f\u06cc \u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u062a\u062e\u0635\u0635\u06cc \u0646\u06cc\u06a9\u0627\u0646",
                            count: 9
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645 \u0627\u0644\u0628\u0646\u06cc\u0646(\u0633) - \u0645\u0634\u0647\u062f",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645 \u0627\u0644\u0628\u0646\u06cc\u0646(\u0633) - \u0645\u0634\u0647\u062f",
                            count: 9
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062d\u0636\u0631\u062a \u0648\u0644\u06cc \u0639\u0635\u0631 \u062e\u0631\u0645 \u0628\u06cc\u062f",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062d\u0636\u0631\u062a \u0648\u0644\u06cc \u0639\u0635\u0631 \u062e\u0631\u0645 \u0628\u06cc\u062f",
                            count: 9
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0646\u0647\u0645 \u062f\u06cc",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0646\u0647\u0645 \u062f\u06cc",
                            count: 9
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u0627\u0645 \u0633\u062c\u0627\u062f(\u0639  \u06cc\u0627\u0633\u0648\u062c",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u0627\u0645 \u0633\u062c\u0627\u062f(\u0639  \u06cc\u0627\u0633\u0648\u062c",
                            count: 8
                          },
                          {
                            title:
                              "\u0645\u062c\u062a\u0645\u0639 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u06cc \u0627\u0645\u0627\u0645 \u062e\u0645\u06cc\u0646\u06cc (\u0631\u0647) \u062f\u0631\u0645\u0627\u0646\u06af\u0627\u0647\u0647\u0627\u06cc \u0633\u0627\u062e\u062a\u0645\u0627\u0646 \u0648\u0644\u06cc\u0639\u0635\u0631 \u062f\u0648",
                            value:
                              "\u0645\u062c\u062a\u0645\u0639 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646\u06cc \u0627\u0645\u0627\u0645 \u062e\u0645\u06cc\u0646\u06cc (\u0631\u0647) \u062f\u0631\u0645\u0627\u0646\u06af\u0627\u0647\u0647\u0627\u06cc \u0633\u0627\u062e\u062a\u0645\u0627\u0646 \u0648\u0644\u06cc\u0639\u0635\u0631 \u062f\u0648",
                            count: 8
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0648\u06cc\u0698\u0647 \u062a\u062e\u0635\u0635\u06cc \u0648\u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u062f\u0633\u062a\u063a\u06cc\u0628 \u06cc\u0627\u0633\u0627\u06cc\u06cc",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0648\u06cc\u0698\u0647 \u062a\u062e\u0635\u0635\u06cc \u0648\u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u062f\u0633\u062a\u063a\u06cc\u0628 \u06cc\u0627\u0633\u0627\u06cc\u06cc",
                            count: 8
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646-\u062a\u0647\u0631\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646-\u062a\u0647\u0631\u0627\u0646",
                            count: 8
                          },
                          {
                            title:
                              "\u0645\u0631\u06a9\u0632 \u0622\u0645\u0648\u0632\u0634\u06cc \u067e\u0698\u0648\u0647\u0634\u06cc \u0648 \u062f\u0631\u0645\u0627\u0646\u06cc \u0642\u0627\u0626\u0645 \u0639\u062c - \u0645\u0634\u0647\u062f",
                            value:
                              "\u0645\u0631\u06a9\u0632 \u0622\u0645\u0648\u0632\u0634\u06cc \u067e\u0698\u0648\u0647\u0634\u06cc \u0648 \u062f\u0631\u0645\u0627\u0646\u06cc \u0642\u0627\u0626\u0645 \u0639\u062c - \u0645\u0634\u0647\u062f",
                            count: 8
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u06af\u0644\u062f\u06cc\u0633 \u0634\u0627\u0647\u06cc\u0646 \u0634\u0647\u0631 \u0627\u0635\u0641\u0647\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u06af\u0644\u062f\u06cc\u0633 \u0634\u0627\u0647\u06cc\u0646 \u0634\u0647\u0631 \u0627\u0635\u0641\u0647\u0627\u0646",
                            count: 8
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0645\u0647\u062f\u06cc\u0647 \u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0645\u0647\u062f\u06cc\u0647 \u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
                            count: 8
                          },
                          {
                            title:
                              "\u062f\u0631\u0645\u0627\u0646\u06af\u0627\u0647 \u0634\u0628\u0627\u0646\u0647 \u0631\u0648\u0632\u06cc \u0646\u06cc\u0627\u0648\u0631\u0627\u0646",
                            value:
                              "\u062f\u0631\u0645\u0627\u0646\u06af\u0627\u0647 \u0634\u0628\u0627\u0646\u0647 \u0631\u0648\u0632\u06cc \u0646\u06cc\u0627\u0648\u0631\u0627\u0646",
                            count: 8
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u0627\u0645 \u062d\u0633\u0646 \u0639\u0633\u06a9\u0631\u06cc \u0632\u0631\u0642\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u0627\u0645 \u062d\u0633\u0646 \u0639\u0633\u06a9\u0631\u06cc \u0632\u0631\u0642\u0627\u0646",
                            count: 8
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0628\u0627\u0632\u0631\u06af\u0627\u0646\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u062a\u062e\u0635\u0635\u06cc \u0648 \u0641\u0648\u0642 \u062a\u062e\u0635\u0635\u06cc \u0628\u0627\u0632\u0631\u06af\u0627\u0646\u0627\u0646",
                            count: 8
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u067e\u0627\u0633\u0627\u0631\u06af\u0627\u062f \u062a\u0647\u0631\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u067e\u0627\u0633\u0627\u0631\u06af\u0627\u062f \u062a\u0647\u0631\u0627\u0646",
                            count: 8
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u0627\u0645 \u062d\u0633\u0646 \u0645\u062c\u062a\u0628\u06cc \u062f\u0627\u0631\u0627\u0628",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0627\u0645\u0627\u0645 \u062d\u0633\u0646 \u0645\u062c\u062a\u0628\u06cc \u062f\u0627\u0631\u0627\u0628",
                            count: 8
                          },
                          {
                            title:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0622\u06cc\u062a \u0627\u0644\u0644\u0647 \u0628\u0631\u0648\u062c\u0631\u062f\u06cc \u0644\u0631\u0633\u062a\u0627\u0646",
                            value:
                              "\u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0622\u06cc\u062a \u0627\u0644\u0644\u0647 \u0628\u0631\u0648\u062c\u0631\u062f\u06cc \u0644\u0631\u0633\u062a\u0627\u0646",
                            count: 8
                          },
                          {
                            title:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0641\u0627\u0637\u0645\u06cc\u0647",
                            value:
                              "\u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0628\u06cc\u0645\u0627\u0631\u0633\u062a\u0627\u0646 \u0641\u0627\u0637\u0645\u06cc\u0647",
                            count: 8
                          },
                          {
                            title:
                              "\u062f\u0631\u0645\u0627\u0646\u06af\u0627\u0647 \u0627\u0645\u0627\u0645 \u0631\u0636\u0627 \u062f\u0627\u0646\u0634\u06af\u0627\u0647 \u0639\u0644\u0648\u0645 \u067e\u0632\u0634\u06a9\u06cc \u0641\u0627\u0631\u0633",
                            value:
                              "\u062f\u0631\u0645\u0627\u0646\u06af\u0627\u0647 \u0627\u0645\u0627\u0645 \u0631\u0636\u0627 \u062f\u0627\u0646\u0634\u06af\u0627\u0647 \u0639\u0644\u0648\u0645 \u067e\u0632\u0634\u06a9\u06cc \u0641\u0627\u0631\u0633",
                            count: 8
                          },
                          {
                            title:
                              "\u0645\u0631\u06a9\u0632 \u0646\u0627\u0628\u0627\u0631\u0648\u0631\u06cc \u0628\u0647\u0627\u0631\u0627\u0646",
                            value:
                              "\u0645\u0631\u06a9\u0632 \u0646\u0627\u0628\u0627\u0631\u0648\u0631\u06cc \u0628\u0647\u0627\u0631\u0627\u0646",
                            count: 8
                          },
                          {
                            title:
                              "\u0645\u0631\u06a9\u0632 \u0628\u0627\u0631\u0648\u0631\u06cc \u0648 \u0646\u0627\u0628\u0627\u0631\u0648\u0631\u06cc \u0627\u0645\u06cc\u0646 \u067e\u0631\u0648\u0631\u0634 \u0631\u0626\u0648\u0641",
                            value:
                              "\u0645\u0631\u06a9\u0632 \u0628\u0627\u0631\u0648\u0631\u06cc \u0648 \u0646\u0627\u0628\u0627\u0631\u0648\u0631\u06cc \u0627\u0645\u06cc\u0646 \u067e\u0631\u0648\u0631\u0634 \u0631\u0626\u0648\u0641",
                            count: 8
                          }
                        ]
                      },
                      {
                        title:
                          "\u0642\u06cc\u0645\u062a \u0645\u0634\u0627\u0648\u0631\u0647",
                        name: "consult_price",
                        type: "slider_with_count",
                        items: [
                          {
                            title:
                              "\u0642\u06cc\u0645\u062a \u06a9\u0645\u062a\u0631 \u0627\u0632 50000 \u062a\u0648\u0645\u0627\u0646",
                            value: "0_50",
                            count: 21,
                            from: 0,
                            to: 50
                          },
                          {
                            title:
                              "50000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 55000 \u062a\u0648\u0645\u0627\u0646",
                            value: "50_55",
                            count: 45,
                            from: 50,
                            to: 55
                          },
                          {
                            title:
                              "55000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 60000 \u062a\u0648\u0645\u0627\u0646",
                            value: "55_60",
                            count: 3,
                            from: 55,
                            to: 60
                          },
                          {
                            title:
                              "60000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 65000 \u062a\u0648\u0645\u0627\u0646",
                            value: "60_65",
                            count: 19,
                            from: 60,
                            to: 65
                          },
                          {
                            title:
                              "65000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 70000 \u062a\u0648\u0645\u0627\u0646",
                            value: "65_70",
                            count: 6,
                            from: 65,
                            to: 70
                          },
                          {
                            title:
                              "70000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 75000 \u062a\u0648\u0645\u0627\u0646",
                            value: "70_75",
                            count: 22,
                            from: 70,
                            to: 75
                          },
                          {
                            title:
                              "75000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 80000 \u062a\u0648\u0645\u0627\u0646",
                            value: "75_80",
                            count: 9,
                            from: 75,
                            to: 80
                          },
                          {
                            title:
                              "80000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 85000 \u062a\u0648\u0645\u0627\u0646",
                            value: "80_85",
                            count: 32,
                            from: 80,
                            to: 85
                          },
                          {
                            title:
                              "85000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 90000 \u062a\u0648\u0645\u0627\u0646",
                            value: "85_90",
                            count: 30,
                            from: 85,
                            to: 90
                          },
                          {
                            title:
                              "90000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 95000 \u062a\u0648\u0645\u0627\u0646",
                            value: "90_95",
                            count: 39,
                            from: 90,
                            to: 95
                          },
                          {
                            title:
                              "95000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 100000 \u062a\u0648\u0645\u0627\u0646",
                            value: "95_100",
                            count: 28,
                            from: 95,
                            to: 100
                          },
                          {
                            title:
                              "100000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 105000 \u062a\u0648\u0645\u0627\u0646",
                            value: "100_105",
                            count: 136,
                            from: 100,
                            to: 105
                          },
                          {
                            title:
                              "105000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 110000 \u062a\u0648\u0645\u0627\u0646",
                            value: "105_110",
                            count: 3,
                            from: 105,
                            to: 110
                          },
                          {
                            title:
                              "110000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 115000 \u062a\u0648\u0645\u0627\u0646",
                            value: "110_115",
                            count: 18,
                            from: 110,
                            to: 115
                          },
                          {
                            title:
                              "115000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 120000 \u062a\u0648\u0645\u0627\u0646",
                            value: "115_120",
                            count: 2,
                            from: 115,
                            to: 120
                          },
                          {
                            title:
                              "120000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 125000 \u062a\u0648\u0645\u0627\u0646",
                            value: "120_125",
                            count: 66,
                            from: 120,
                            to: 125
                          },
                          {
                            title:
                              "125000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 130000 \u062a\u0648\u0645\u0627\u0646",
                            value: "125_130",
                            count: 3,
                            from: 125,
                            to: 130
                          },
                          {
                            title:
                              "130000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 135000 \u062a\u0648\u0645\u0627\u0646",
                            value: "130_135",
                            count: 17,
                            from: 130,
                            to: 135
                          },
                          {
                            title:
                              "135000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 140000 \u062a\u0648\u0645\u0627\u0646",
                            value: "135_140",
                            count: 5,
                            from: 135,
                            to: 140
                          },
                          {
                            title:
                              "140000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 145000 \u062a\u0648\u0645\u0627\u0646",
                            value: "140_145",
                            count: 11,
                            from: 140,
                            to: 145
                          },
                          {
                            title:
                              "145000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 150000 \u062a\u0648\u0645\u0627\u0646",
                            value: "145_150",
                            count: 3,
                            from: 145,
                            to: 150
                          },
                          {
                            title:
                              "150000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 155000 \u062a\u0648\u0645\u0627\u0646",
                            value: "150_155",
                            count: 176,
                            from: 150,
                            to: 155
                          },
                          {
                            title:
                              "155000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 160000 \u062a\u0648\u0645\u0627\u0646",
                            value: "155_160",
                            count: 0,
                            from: 155,
                            to: 160
                          },
                          {
                            title:
                              "160000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 165000 \u062a\u0648\u0645\u0627\u0646",
                            value: "160_165",
                            count: 7,
                            from: 160,
                            to: 165
                          },
                          {
                            title:
                              "165000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 170000 \u062a\u0648\u0645\u0627\u0646",
                            value: "165_170",
                            count: 3,
                            from: 165,
                            to: 170
                          },
                          {
                            title:
                              "170000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 175000 \u062a\u0648\u0645\u0627\u0646",
                            value: "170_175",
                            count: 8,
                            from: 170,
                            to: 175
                          },
                          {
                            title:
                              "175000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 180000 \u062a\u0648\u0645\u0627\u0646",
                            value: "175_180",
                            count: 2,
                            from: 175,
                            to: 180
                          },
                          {
                            title:
                              "180000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 185000 \u062a\u0648\u0645\u0627\u0646",
                            value: "180_185",
                            count: 22,
                            from: 180,
                            to: 185
                          },
                          {
                            title:
                              "185000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 190000 \u062a\u0648\u0645\u0627\u0646",
                            value: "185_190",
                            count: 7,
                            from: 185,
                            to: 190
                          },
                          {
                            title:
                              "190000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 195000 \u062a\u0648\u0645\u0627\u0646",
                            value: "190_195",
                            count: 5,
                            from: 190,
                            to: 195
                          },
                          {
                            title:
                              "195000 \u062a\u0648\u0645\u0627\u0646 \u062a\u0627 200000 \u062a\u0648\u0645\u0627\u0646",
                            value: "195_200",
                            count: 3,
                            from: 195,
                            to: 200
                          },
                          {
                            title:
                              "\u0642\u06cc\u0645\u062a \u0628\u06cc\u0634\u062a\u0631 \u0627\u0632 200000 \u062a\u0648\u0645\u0627\u0646",
                            value: "200_inf",
                            count: 301,
                            from: 200,
                            to: "inf"
                          }
                        ]
                      }
                    ]}
                    onClick={async (name, value) => {
                      const $steps = {};

                      $steps["runOnClick"] = true
                        ? (() => {
                            const actionArgs = {
                              eventRef: $props["onClick"],
                              args: [
                                (() => {
                                  try {
                                    return name;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })(),
                                (() => {
                                  try {
                                    return value;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              ]
                            };
                            return (({ eventRef, args }) => {
                              return eventRef?.(...(args ?? []));
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["runOnClick"] != null &&
                        typeof $steps["runOnClick"] === "object" &&
                        typeof $steps["runOnClick"].then === "function"
                      ) {
                        $steps["runOnClick"] = await $steps["runOnClick"];
                      }
                    }}
                    selected={(() => {
                      try {
                        return $props.items.selected_filters;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                  />
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__hpRvf)}
                >
                  <Button
                    children2={
                      <React.Fragment>
                        {(() => {
                          try {
                            return `مشاهده ${$props.countOfFilters} نتیجه`;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return "Button";
                            }
                            throw e;
                          }
                        })()}
                      </React.Fragment>
                    }
                    className={classNames("__wab_instance", sty.button__k6JMe)}
                    loading={(() => {
                      try {
                        return $props.isLoadingFilters;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateFilterListDialogOpen"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["filterListDialog", "open"]
                              },
                              operation: 4
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              const oldValue = $stateGet(objRoot, variablePath);
                              $stateSet(objRoot, variablePath, !oldValue);
                              return !oldValue;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateFilterListDialogOpen"] != null &&
                        typeof $steps["updateFilterListDialogOpen"] ===
                          "object" &&
                        typeof $steps["updateFilterListDialogOpen"].then ===
                          "function"
                      ) {
                        $steps["updateFilterListDialogOpen"] = await $steps[
                          "updateFilterListDialogOpen"
                        ];
                      }
                    }}
                  />

                  <Button
                    children2={
                      "\u062d\u0630\u0641 \u062a\u0645\u0627\u0645 \u0641\u06cc\u0644\u062a\u0631 \u0647\u0627"
                    }
                    className={classNames("__wab_instance", sty.button__yg7Pb)}
                    color={"text"}
                    onClick={async event => {
                      const $steps = {};

                      $steps["runOnRemoveAllFilters"] = true
                        ? (() => {
                            const actionArgs = {
                              eventRef: $props["onRemoveAllFilters"]
                            };
                            return (({ eventRef, args }) => {
                              return eventRef?.(...(args ?? []));
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["runOnRemoveAllFilters"] != null &&
                        typeof $steps["runOnRemoveAllFilters"] === "object" &&
                        typeof $steps["runOnRemoveAllFilters"].then ===
                          "function"
                      ) {
                        $steps["runOnRemoveAllFilters"] = await $steps[
                          "runOnRemoveAllFilters"
                        ];
                      }

                      $steps["updateFilterListDialogOpen"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["filterListDialog", "open"]
                              },
                              operation: 4
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              const oldValue = $stateGet(objRoot, variablePath);
                              $stateSet(objRoot, variablePath, !oldValue);
                              return !oldValue;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateFilterListDialogOpen"] != null &&
                        typeof $steps["updateFilterListDialogOpen"] ===
                          "object" &&
                        typeof $steps["updateFilterListDialogOpen"].then ===
                          "function"
                      ) {
                        $steps["updateFilterListDialogOpen"] = await $steps[
                          "updateFilterListDialogOpen"
                        ];
                      }
                    }}
                    outline={true}
                  />
                </Stack__>
              </div>
            }
            className={classNames("__wab_instance", sty.filterListDialog)}
            noTrigger={true}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "filterListDialog",
                "open"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            open={generateStateValueProp($state, ["filterListDialog", "open"])}
            title={"\u0641\u06cc\u0644\u062a\u0631 \u0647\u0627"}
            trigger={null}
          />

          <Dialog
            data-plasmic-name={"categoriesDialog"}
            data-plasmic-override={overrides.categoriesDialog}
            body={
              <FilterExpertiseList
                data-plasmic-name={"filterExpertiseList"}
                data-plasmic-override={overrides.filterExpertiseList}
                categories={(() => {
                  try {
                    return $props.items.categories;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
                className={classNames(
                  "__wab_instance",
                  sty.filterExpertiseList
                )}
                onClickSubCategory={async (link, value) => {
                  const $steps = {};

                  $steps["goToPage"] = true
                    ? (() => {
                        const actionArgs = {
                          destination: (() => {
                            try {
                              return link;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToPage"] != null &&
                    typeof $steps["goToPage"] === "object" &&
                    typeof $steps["goToPage"].then === "function"
                  ) {
                    $steps["goToPage"] = await $steps["goToPage"];
                  }

                  $steps["updateCategoriesDialogOpen"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["categoriesDialog", "open"]
                          },
                          operation: 4
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          const oldValue = $stateGet(objRoot, variablePath);
                          $stateSet(objRoot, variablePath, !oldValue);
                          return !oldValue;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateCategoriesDialogOpen"] != null &&
                    typeof $steps["updateCategoriesDialogOpen"] === "object" &&
                    typeof $steps["updateCategoriesDialogOpen"].then ===
                      "function"
                  ) {
                    $steps["updateCategoriesDialogOpen"] = await $steps[
                      "updateCategoriesDialogOpen"
                    ];
                  }

                  $steps["runCode"] = true
                    ? (() => {
                        const actionArgs = {
                          customFunction: async () => {
                            return (() => {
                              if (typeof window != "undefined") {
                                const items =
                                  globalThis.window.document.getElementById(
                                    "item-list"
                                  );
                                if (items) {
                                  return items.scrollTo({
                                    left: 0,
                                    behavior: "smooth"
                                  });
                                }
                              }
                            })();
                          }
                        };
                        return (({ customFunction }) => {
                          return customFunction();
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["runCode"] != null &&
                    typeof $steps["runCode"] === "object" &&
                    typeof $steps["runCode"].then === "function"
                  ) {
                    $steps["runCode"] = await $steps["runCode"];
                  }
                }}
                selectedFlters={(() => {
                  try {
                    return $props.items.selected_filters;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
              />
            }
            className={classNames("__wab_instance", sty.categoriesDialog)}
            noTrigger={true}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "categoriesDialog",
                "open"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            open={generateStateValueProp($state, ["categoriesDialog", "open"])}
            title={
              <React.Fragment>
                {(() => {
                  try {
                    return $props.items.selected_filters?.category
                      ? $props.items.categories.find(
                          cat =>
                            cat.value === $props.items.selected_filters.category
                        ).title
                      : "تخصص ها";
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return "\u0641\u06cc\u0644\u062a\u0631 \u0647\u0627";
                    }
                    throw e;
                  }
                })()}
              </React.Fragment>
            }
            trigger={null}
          />

          <Dialog
            data-plasmic-name={"optionsDialog"}
            data-plasmic-override={overrides.optionsDialog}
            body={
              <FilterListItem
                className={classNames(
                  "__wab_instance",
                  sty.filterListItem___1JNj6
                )}
                isLastChild={true}
                item={(() => {
                  try {
                    return { ...$state.selectedFilterObject, title: "" };
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
                onClick={async (value, name) => {
                  const $steps = {};

                  $steps["runOnClick"] = true
                    ? (() => {
                        const actionArgs = {
                          eventRef: $props["onClick"],
                          args: [
                            (() => {
                              try {
                                return name;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })(),
                            (() => {
                              try {
                                return value;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          ]
                        };
                        return (({ eventRef, args }) => {
                          return eventRef?.(...(args ?? []));
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["runOnClick"] != null &&
                    typeof $steps["runOnClick"] === "object" &&
                    typeof $steps["runOnClick"].then === "function"
                  ) {
                    $steps["runOnClick"] = await $steps["runOnClick"];
                  }

                  $steps["updateOptionsDialogOpen"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["optionsDialog", "open"]
                          },
                          operation: 0,
                          value: false
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateOptionsDialogOpen"] != null &&
                    typeof $steps["updateOptionsDialogOpen"] === "object" &&
                    typeof $steps["updateOptionsDialogOpen"].then === "function"
                  ) {
                    $steps["updateOptionsDialogOpen"] = await $steps[
                      "updateOptionsDialogOpen"
                    ];
                  }

                  $steps["runCode"] = true
                    ? (() => {
                        const actionArgs = {
                          customFunction: async () => {
                            return (() => {
                              if (typeof window != "undefined") {
                                const items =
                                  globalThis.window.document.getElementById(
                                    "item-list"
                                  );
                                if (items) {
                                  return items.scrollTo({
                                    left: 0,
                                    behavior: "smooth"
                                  });
                                }
                              }
                            })();
                          }
                        };
                        return (({ customFunction }) => {
                          return customFunction();
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["runCode"] != null &&
                    typeof $steps["runCode"] === "object" &&
                    typeof $steps["runCode"].then === "function"
                  ) {
                    $steps["runCode"] = await $steps["runCode"];
                  }
                }}
                selected={(() => {
                  try {
                    return $props.items.selected_filters[
                      $state.selectedFilterObject.name
                    ];
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
              />
            }
            className={classNames("__wab_instance", sty.optionsDialog)}
            noTrigger={true}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "optionsDialog",
                "open"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            open={generateStateValueProp($state, ["optionsDialog", "open"])}
            title={
              <React.Fragment>
                {(() => {
                  try {
                    return $state.selectedFilterObject.title;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return "\u0641\u06cc\u0644\u062a\u0631 \u0647\u0627";
                    }
                    throw e;
                  }
                })()}
              </React.Fragment>
            }
            trigger={null}
          />
        </div>
      ) : null}
      {(() => {
        try {
          return $props.isLanding;
        } catch (e) {
          if (
            e instanceof TypeError ||
            e?.plasmicType === "PlasmicUndefinedDataError"
          ) {
            return true;
          }
          throw e;
        }
      })() ? (
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(
            projectcss.all,
            sty.freeBox__nGtd4,
            "no-scroll"
          )}
        >
          {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
            (() => {
              try {
                return $state.suggestionTags;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return [];
                }
                throw e;
              }
            })()
          ).map((__plasmic_item_0, __plasmic_idx_0) => {
            const currentItem = __plasmic_item_0;
            const currentIndex = __plasmic_idx_0;
            return (
              <div
                className={classNames(projectcss.all, sty.freeBox__aOblI)}
                key={currentIndex}
                onClick={async event => {
                  const $steps = {};

                  $steps["goToPage"] = true
                    ? (() => {
                        const actionArgs = {
                          destination: (() => {
                            try {
                              return currentItem.url;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToPage"] != null &&
                    typeof $steps["goToPage"] === "object" &&
                    typeof $steps["goToPage"].then === "function"
                  ) {
                    $steps["goToPage"] = await $steps["goToPage"];
                  }
                }}
              >
                <Chip
                  data-plasmic-name={"chip"}
                  data-plasmic-override={overrides.chip}
                  className={classNames("__wab_instance", sty.chip)}
                  color={"gray"}
                  content={(() => {
                    try {
                      return currentItem.text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()}
                />
              </div>
            );
          })}
        </Stack__>
      ) : null}
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "filterRowSingle",
    "sortDialog",
    "filterListDialog",
    "lineClamp",
    "filterList",
    "categoriesDialog",
    "filterExpertiseList",
    "optionsDialog",
    "chip"
  ],
  filterRowSingle: ["filterRowSingle"],
  sortDialog: ["sortDialog"],
  filterListDialog: ["filterListDialog", "lineClamp", "filterList"],
  lineClamp: ["lineClamp"],
  filterList: ["filterList"],
  categoriesDialog: ["categoriesDialog", "filterExpertiseList"],
  filterExpertiseList: ["filterExpertiseList"],
  optionsDialog: ["optionsDialog"],
  chip: ["chip"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  filterRowSingle: typeof FilterRowSingle;
  sortDialog: typeof Dialog;
  filterListDialog: typeof Dialog;
  lineClamp: typeof LineClamp;
  filterList: typeof FilterList;
  categoriesDialog: typeof Dialog;
  filterExpertiseList: typeof FilterExpertiseList;
  optionsDialog: typeof Dialog;
  chip: typeof Chip;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFilterRow__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFilterRow__VariantsArgs;
    args?: PlasmicFilterRow__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicFilterRow__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicFilterRow__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicFilterRow__ArgProps,
          internalVariantPropNames: PlasmicFilterRow__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicFilterRow__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFilterRow";
  } else {
    func.displayName = `PlasmicFilterRow.${nodeName}`;
  }
  return func;
}

export const PlasmicFilterRow = Object.assign(
  // Top-level PlasmicFilterRow renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    filterRowSingle: makeNodeComponent("filterRowSingle"),
    sortDialog: makeNodeComponent("sortDialog"),
    filterListDialog: makeNodeComponent("filterListDialog"),
    lineClamp: makeNodeComponent("lineClamp"),
    filterList: makeNodeComponent("filterList"),
    categoriesDialog: makeNodeComponent("categoriesDialog"),
    filterExpertiseList: makeNodeComponent("filterExpertiseList"),
    optionsDialog: makeNodeComponent("optionsDialog"),
    chip: makeNodeComponent("chip"),

    // Metadata about props expected for PlasmicFilterRow
    internalVariantProps: PlasmicFilterRow__VariantProps,
    internalArgProps: PlasmicFilterRow__ArgProps
  }
);

export default PlasmicFilterRow;
/* prettier-ignore-end */
