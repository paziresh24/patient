/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: grxNYctbMek6PL66cujx3u
// Component: 1JVvWgQsicxr

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import LauncherComponentsTitle from "../../LauncherComponentsTitle"; // plasmic-import: hyfYYMUJ_ZCV/component
import LauncherComponentsApp from "../../LauncherComponentsApp"; // plasmic-import: 25u6_6Q-fQwp/component
import LauncherComponentsAppSquare from "../../LauncherComponentsAppSquare"; // plasmic-import: u4TwWczEaPgW/component

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_paziresh_24_design_system_css from "../paziresh_24_design_system/plasmic.module.css"; // plasmic-import: 6HBcNwr8dz9LuS1Qe36xa5/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: grxNYctbMek6PL66cujx3u/projectcss
import sty from "./PlasmicLauncherBlocksApps.module.css"; // plasmic-import: 1JVvWgQsicxr/css

createPlasmicElementProxy;

export type PlasmicLauncherBlocksApps__VariantMembers = {};
export type PlasmicLauncherBlocksApps__VariantsArgs = {};
type VariantPropType = keyof PlasmicLauncherBlocksApps__VariantsArgs;
export const PlasmicLauncherBlocksApps__VariantProps =
  new Array<VariantPropType>();

export type PlasmicLauncherBlocksApps__ArgsType = {};
type ArgPropType = keyof PlasmicLauncherBlocksApps__ArgsType;
export const PlasmicLauncherBlocksApps__ArgProps = new Array<ArgPropType>();

export type PlasmicLauncherBlocksApps__OverridesType = {
  root?: Flex__<"div">;
  launcherComponentsTitle?: Flex__<typeof LauncherComponentsTitle>;
};

export interface DefaultLauncherBlocksAppsProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicLauncherBlocksApps__RenderFunc(props: {
  variants: PlasmicLauncherBlocksApps__VariantsArgs;
  args: PlasmicLauncherBlocksApps__ArgsType;
  overrides: PlasmicLauncherBlocksApps__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const $globalActions = useGlobalActions?.();

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_paziresh_24_design_system_css.plasmic_tokens,
        sty.root
      )}
    >
      <LauncherComponentsTitle
        data-plasmic-name={"launcherComponentsTitle"}
        data-plasmic-override={overrides.launcherComponentsTitle}
        className={classNames("__wab_instance", sty.launcherComponentsTitle)}
        isNew={true}
        moreLink={"/_/apps"}
        moreTitle={(() => {
          try {
            return $ctx.auth.info?.provider?.job_title !== "doctor"
              ? null
              : "همه ابزارک ها";
          } catch (e) {
            if (
              e instanceof TypeError ||
              e?.plasmicType === "PlasmicUndefinedDataError"
            ) {
              return undefined;
            }
            throw e;
          }
        })()}
        subTitle={(() => {
          try {
            return $ctx.auth.info?.provider?.job_title === "doctor"
              ? "حرفه‌ای‌‌تر در پذیرش۲۴"
              : "";
          } catch (e) {
            if (
              e instanceof TypeError ||
              e?.plasmicType === "PlasmicUndefinedDataError"
            ) {
              return undefined;
            }
            throw e;
          }
        })()}
        title={"\u0627\u0628\u0632\u0627\u0631\u06a9 \u0647\u0627"}
      />

      <div className={classNames(projectcss.all, sty.freeBox__xm9Rt)}>
        {(() => {
          try {
            return $ctx.auth.info?.provider?.job_title === "doctor";
          } catch (e) {
            if (
              e instanceof TypeError ||
              e?.plasmicType === "PlasmicUndefinedDataError"
            ) {
              return false;
            }
            throw e;
          }
        })() ? (
          <LauncherComponentsApp
            avatar={
              "https://launcher.s3.ir-thr-at1.arvanstorage.ir/apps%2Fnelson-notification.png?versionId="
            }
            className={classNames(
              "__wab_instance",
              sty.launcherComponentsApp__c9Nm0
            )}
            description={
              "\u0627\u0631\u0633\u0627\u0644 \u0627\u0637\u0644\u0627\u0639 \u0631\u0633\u0627\u0646\u06cc \u0647\u0627 \u0628\u0631\u0627\u0633\u0627\u0633 \u0631\u0648\u06cc\u062f\u0627\u062f\u0647\u0627\u06cc \u0645\u062e\u0644\u062a\u0641"
            }
            link={"/dashboard/apps/drapp/notification/"}
            name={
              "\u0627\u0631\u0633\u0627\u0644 \u067e\u06cc\u0627\u0645\u06a9"
            }
            onEvent={async () => {
              const $steps = {};

              $steps["sendLog"] = true
                ? (() => {
                    const actionArgs = {
                      args: [
                        (() => {
                          try {
                            return {
                              evant_group: "launcher_statistics",
                              event_type: "apps",
                              user_id: $ctx.auth.info?.id,
                              is_doctor: $ctx.auth.info?.is_doctor,
                              meta_data: {
                                name: "ارسال پیامک",
                                key: "drapp/notification",
                                link: "/dashboard/apps/drapp/notification/"
                              }
                            };
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      ]
                    };
                    return $globalActions["Splunk.sendLog"]?.apply(null, [
                      ...actionArgs.args
                    ]);
                  })()
                : undefined;
              if (
                $steps["sendLog"] != null &&
                typeof $steps["sendLog"] === "object" &&
                typeof $steps["sendLog"].then === "function"
              ) {
                $steps["sendLog"] = await $steps["sendLog"];
              }
            }}
          />
        ) : null}
        {(() => {
          try {
            return $ctx.auth.info?.provider?.job_title === "doctor";
          } catch (e) {
            if (
              e instanceof TypeError ||
              e?.plasmicType === "PlasmicUndefinedDataError"
            ) {
              return true;
            }
            throw e;
          }
        })() ? (
          <LauncherComponentsApp
            avatar={
              "https://launcher.s3.ir-thr-at1.arvanstorage.ir/apps%2Finsurance-plugin.png?versionId="
            }
            className={classNames(
              "__wab_instance",
              sty.launcherComponentsApp__yf3EN
            )}
            description={
              "\u0627\u0641\u0632\u0648\u062f\u0646 \u0628\u06cc\u0645\u0647 \u0647\u0627\u06cc \u067e\u0627\u06cc\u0647 \u0648 \u062a\u06a9\u0645\u06cc\u0644\u06cc \u0628\u0647 \u067e\u0631\u0648\u0641\u0627\u06cc\u0644"
            }
            link={"/_/bimehnama/setting/"}
            name={"\u0628\u06cc\u0645\u0647 \u0646\u0645\u0627"}
            onEvent={async () => {
              const $steps = {};

              $steps["sendLog"] = true
                ? (() => {
                    const actionArgs = {
                      args: [
                        (() => {
                          try {
                            return {
                              evant_group: "launcher_statistics",
                              event_type: "apps",
                              user_id: $ctx.auth.info?.id,
                              is_doctor: $ctx.auth.info?.is_doctor,
                              meta_data: {
                                name: "بیمه نما",
                                key: "bimehnama/setting",
                                link: "/_/bimehnama/setting/"
                              }
                            };
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      ]
                    };
                    return $globalActions["Splunk.sendLog"]?.apply(null, [
                      ...actionArgs.args
                    ]);
                  })()
                : undefined;
              if (
                $steps["sendLog"] != null &&
                typeof $steps["sendLog"] === "object" &&
                typeof $steps["sendLog"].then === "function"
              ) {
                $steps["sendLog"] = await $steps["sendLog"];
              }
            }}
            widgetId={"hhhzbbsffq0nlna"}
          />
        ) : null}
        {(() => {
          try {
            return $ctx.auth.info?.provider?.job_title === "doctor";
          } catch (e) {
            if (
              e instanceof TypeError ||
              e?.plasmicType === "PlasmicUndefinedDataError"
            ) {
              return true;
            }
            throw e;
          }
        })() ? (
          <LauncherComponentsApp
            _new={true}
            avatar={
              "https://launcher.s3.ir-thr-at1.arvanstorage.ir/apps%2Finstagram-plugin.png?versionId="
            }
            className={classNames(
              "__wab_instance",
              sty.launcherComponentsApp__kHecn
            )}
            description={
              "\u0627\u0641\u0632\u0648\u062f\u0646 \u067e\u0633\u062a\u200c\u0647\u0627\u06cc \u0627\u06cc\u0646\u0633\u062a\u0627\u06af\u0631\u0627\u0645 \u0628\u0647 \u067e\u0631\u0648\u0641\u0627\u06cc\u0644"
            }
            link={"/_/cywoc24/launcher/"}
            name={
              "\u067e\u0631\u0648\u0641\u0627\u06cc\u0644 \u0627\u06cc\u0646\u0633\u062a\u0627\u06af\u0631\u0627\u0645"
            }
            onEvent={async () => {
              const $steps = {};

              $steps["sendLog"] = true
                ? (() => {
                    const actionArgs = {
                      args: [
                        (() => {
                          try {
                            return {
                              evant_group: "launcher_statistics",
                              event_type: "apps",
                              user_id: $ctx.auth.info?.id,
                              is_doctor: $ctx.auth.info?.is_doctor,
                              meta_data: {
                                name: "پروفایل اینستاگرام",
                                key: "cywoc24/setting",
                                link: "/_/cywoc24/launcher/"
                              }
                            };
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      ]
                    };
                    return $globalActions["Splunk.sendLog"]?.apply(null, [
                      ...actionArgs.args
                    ]);
                  })()
                : undefined;
              if (
                $steps["sendLog"] != null &&
                typeof $steps["sendLog"] === "object" &&
                typeof $steps["sendLog"].then === "function"
              ) {
                $steps["sendLog"] = await $steps["sendLog"];
              }
            }}
            widgetId={"aed80eahprc1qs0"}
          />
        ) : null}
        {false ? (
          <LauncherComponentsApp
            avatar={
              "https://launcher.s3.ir-thr-at1.arvanstorage.ir/apps%2FSalamat%20Logo.svg?versionId="
            }
            className={classNames(
              "__wab_instance",
              sty.launcherComponentsApp__huggg
            )}
            description={
              "\u0628\u0627 \u0647\u0648\u0634 \u0645\u0635\u0646\u0648\u0639\u06cc \u0628\u0647 \u0635\u0648\u0631\u062a \u0631\u0627\u06cc\u06af\u0627\u0646 \u0635\u062d\u0628\u062a \u06a9\u0646\u06cc\u062f."
            }
            link={"/_/roshan/salamat/?origin=launcher-apps"}
            name={
              "\u0645\u0634\u0627\u0648\u0631 \u0647\u0648\u0634 \u0645\u0635\u0646\u0648\u0639\u06cc \u0633\u0644\u0627\u0645\u062a"
            }
          />
        ) : null}
        {false ? (
          <LauncherComponentsApp
            avatar={
              "https://hamdast.s3.ir-thr-at1.arvanstorage.ir/apps%2Fliom%2Ficon.png"
            }
            className={classNames(
              "__wab_instance",
              sty.launcherComponentsApp__iwAwY
            )}
            description={
              "\u067e\u0631\u06cc\u0648\u062f \u0634\u0645\u0627 \u0646\u0627\u0645\u0646\u0638\u0645 \u0627\u0633\u062a\u061f \u0647\u0645\u06cc\u0646 \u0627\u0644\u0627\u0646\u060c \u06af\u0641\u062a\u06af\u0648 \u0631\u0627 \u0622\u063a\u0627\u0632 \u06a9\u0646\u06cc\u062f."
            }
            link={"/_/liom/irregularities/?origin=launcher"}
            name={
              "\u062a\u0634\u062e\u06cc\u0635 \u062f\u0647\u0646\u062f\u0647 \u0639\u0644\u062a \u067e\u0631\u06cc\u0648\u062f \u0646\u0627\u0645\u0646\u0638\u0645"
            }
          />
        ) : null}
        {(() => {
          try {
            return $ctx.auth.info?.provider?.job_title !== "doctor";
          } catch (e) {
            if (
              e instanceof TypeError ||
              e?.plasmicType === "PlasmicUndefinedDataError"
            ) {
              return true;
            }
            throw e;
          }
        })() ? (
          <div className={classNames(projectcss.all, sty.freeBox___0Utqf)}>
            <LauncherComponentsAppSquare
              className={classNames(
                "__wab_instance",
                sty.launcherComponentsAppSquare__b4Fhi
              )}
              description={
                "\u0627\u06cc\u0646 \u0622\u0632\u0645\u0648\u0646 \u0633\u0644\u0627\u0645\u062a\u06cc \u062a\u0648\u0633\u0637 \u062f\u06a9\u062a\u0631 \u062d\u0633\u06cc\u0646 \u0645\u0646\u0635\u0648\u0631\u06a9\u06cc\u0627\u0626\u06cc \u0637\u0631\u0627\u062d\u06cc \u0634\u062f\u0647 \u0627\u0633\u062a."
              }
              icon={
                "https://launcher.s3.ir-thr-at1.arvanstorage.ir/apps%2Fliom-fe.png"
              }
              onClick={async () => {
                const $steps = {};

                $steps["sendLog"] = true
                  ? (() => {
                      const actionArgs = {
                        args: [
                          (() => {
                            try {
                              return {
                                evant_group: "launcher_statistics",
                                event_type: "apps",
                                user_id: $ctx.auth.info?.id,
                                is_doctor: $ctx.auth.info?.is_doctor,
                                meta_data: {
                                  name: "تشخیص کمبود آهن",
                                  key: "liom/self-test",
                                  link: "/_/liom/self-test/"
                                }
                              };
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        ]
                      };
                      return $globalActions["Splunk.sendLog"]?.apply(null, [
                        ...actionArgs.args
                      ]);
                    })()
                  : undefined;
                if (
                  $steps["sendLog"] != null &&
                  typeof $steps["sendLog"] === "object" &&
                  typeof $steps["sendLog"].then === "function"
                ) {
                  $steps["sendLog"] = await $steps["sendLog"];
                }

                $steps[
                  "goToLiomSelfTestAppPaziresh24TypeIdaOriginPaziresh24GwPaziresh24"
                ] = true
                  ? (() => {
                      const actionArgs = {
                        destination:
                          "/_/liom/self-test/?app=paziresh24&type=ida&origin=paziresh24&gw=paziresh24"
                      };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps[
                    "goToLiomSelfTestAppPaziresh24TypeIdaOriginPaziresh24GwPaziresh24"
                  ] != null &&
                  typeof $steps[
                    "goToLiomSelfTestAppPaziresh24TypeIdaOriginPaziresh24GwPaziresh24"
                  ] === "object" &&
                  typeof $steps[
                    "goToLiomSelfTestAppPaziresh24TypeIdaOriginPaziresh24GwPaziresh24"
                  ].then === "function"
                ) {
                  $steps[
                    "goToLiomSelfTestAppPaziresh24TypeIdaOriginPaziresh24GwPaziresh24"
                  ] = await $steps[
                    "goToLiomSelfTestAppPaziresh24TypeIdaOriginPaziresh24GwPaziresh24"
                  ];
                }
              }}
              title={
                "\u062a\u0634\u062e\u06cc\u0635 \u06a9\u0645\u0628\u0648\u062f \u0622\u0647\u0646"
              }
            />

            <LauncherComponentsAppSquare
              className={classNames(
                "__wab_instance",
                sty.launcherComponentsAppSquare__xBoQ
              )}
              description={
                "\u062f\u0633\u062a\u06cc\u0627\u0631 \u0647\u0648\u0634\u0645\u0646\u062f \u062a\u0641\u0633\u06cc\u0631 \u0622\u0632\u0645\u0627\u06cc\u0634"
              }
              disabled={(() => {
                try {
                  return !$ctx.Growthbook?.features?.[
                    "launcher::lab_result_app"
                  ];
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return "disabled";
                  }
                  throw e;
                }
              })()}
              icon={
                "https://hamdast.s3.ir-thr-at1.arvanstorage.ir/apps%2Flab-result.png?versionId="
              }
              onClick={async () => {
                const $steps = {};

                $steps["sendLog"] = true
                  ? (() => {
                      const actionArgs = {
                        args: [
                          (() => {
                            try {
                              return {
                                evant_group: "launcher_statistics",
                                event_type: "apps",
                                user_id: $ctx.auth.info?.id,
                                is_doctor: $ctx.auth.info?.is_doctor,
                                meta_data: {
                                  name: "تفسیر",
                                  key: "lab_result/launcher",
                                  link: "/_/lab_result/launcher/"
                                }
                              };
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        ]
                      };
                      return $globalActions["Splunk.sendLog"]?.apply(null, [
                        ...actionArgs.args
                      ]);
                    })()
                  : undefined;
                if (
                  $steps["sendLog"] != null &&
                  typeof $steps["sendLog"] === "object" &&
                  typeof $steps["sendLog"].then === "function"
                ) {
                  $steps["sendLog"] = await $steps["sendLog"];
                }

                $steps["goToLabResultLauncher"] = $ctx.Growthbook?.features?.[
                  "launcher::lab_result_app"
                ]
                  ? (() => {
                      const actionArgs = {
                        destination: "/_/lab_result/launcher"
                      };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToLabResultLauncher"] != null &&
                  typeof $steps["goToLabResultLauncher"] === "object" &&
                  typeof $steps["goToLabResultLauncher"].then === "function"
                ) {
                  $steps["goToLabResultLauncher"] = await $steps[
                    "goToLabResultLauncher"
                  ];
                }
              }}
              title={"\u062a\u0641\u0633\u06cc\u0631"}
            />

            <LauncherComponentsAppSquare
              className={classNames(
                "__wab_instance",
                sty.launcherComponentsAppSquare__puPjQ
              )}
              icon={
                "https://launcher.s3.ir-thr-at1.arvanstorage.ir/apps%2FSalamat%20Logo.svg?versionId="
              }
              onClick={async () => {
                const $steps = {};

                $steps["sendLog"] = true
                  ? (() => {
                      const actionArgs = {
                        args: [
                          (() => {
                            try {
                              return {
                                evant_group: "launcher_statistics",
                                event_type: "apps",
                                user_id: $ctx.auth.info?.id,
                                is_doctor: $ctx.auth.info?.is_doctor,
                                meta_data: {
                                  name: "مشاور هوش مصنوعی سلامت",
                                  key: "roshan/salamat",
                                  link: "/_/roshan/salamat/"
                                }
                              };
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        ]
                      };
                      return $globalActions["Splunk.sendLog"]?.apply(null, [
                        ...actionArgs.args
                      ]);
                    })()
                  : undefined;
                if (
                  $steps["sendLog"] != null &&
                  typeof $steps["sendLog"] === "object" &&
                  typeof $steps["sendLog"].then === "function"
                ) {
                  $steps["sendLog"] = await $steps["sendLog"];
                }

                $steps["goToRoshanSalamatOriginLauncherApps"] = true
                  ? (() => {
                      const actionArgs = {
                        destination: "/_/roshan/salamat/?origin=launcher-apps"
                      };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToRoshanSalamatOriginLauncherApps"] != null &&
                  typeof $steps["goToRoshanSalamatOriginLauncherApps"] ===
                    "object" &&
                  typeof $steps["goToRoshanSalamatOriginLauncherApps"].then ===
                    "function"
                ) {
                  $steps["goToRoshanSalamatOriginLauncherApps"] = await $steps[
                    "goToRoshanSalamatOriginLauncherApps"
                  ];
                }
              }}
              title={
                "\u0645\u0634\u0627\u0648\u0631 \u0647\u0648\u0634 \u0645\u0635\u0646\u0648\u0639\u06cc \u0633\u0644\u0627\u0645\u062a"
              }
            />

            <LauncherComponentsAppSquare
              className={classNames(
                "__wab_instance",
                sty.launcherComponentsAppSquare__tgcvE
              )}
              icon={
                "https://launcher.s3.ir-thr-at1.arvanstorage.ir/apps%2Fliom-glucose-meter.png"
              }
              title={
                "\u062a\u0634\u062e\u06cc\u0635 \u0627\u0628\u062a\u0644\u0627 \u0628\u0647 \u062f\u06cc\u0627\u0628\u062a"
              }
            />

            <LauncherComponentsAppSquare
              className={classNames(
                "__wab_instance",
                sty.launcherComponentsAppSquare__ps1Gg
              )}
              icon={
                "https://launcher.s3.ir-thr-at1.arvanstorage.ir/apps%2Fliom-thyroid.png"
              }
              title={
                "\u062a\u0634\u062e\u06cc\u0635 \u0627\u062e\u062a\u0644\u0627\u0644 \u062a\u06cc\u0631\u0648\u0626\u06cc\u062f"
              }
            />
          </div>
        ) : null}
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "launcherComponentsTitle"],
  launcherComponentsTitle: ["launcherComponentsTitle"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  launcherComponentsTitle: typeof LauncherComponentsTitle;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLauncherBlocksApps__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLauncherBlocksApps__VariantsArgs;
    args?: PlasmicLauncherBlocksApps__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLauncherBlocksApps__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicLauncherBlocksApps__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicLauncherBlocksApps__ArgProps,
          internalVariantPropNames: PlasmicLauncherBlocksApps__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicLauncherBlocksApps__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLauncherBlocksApps";
  } else {
    func.displayName = `PlasmicLauncherBlocksApps.${nodeName}`;
  }
  return func;
}

export const PlasmicLauncherBlocksApps = Object.assign(
  // Top-level PlasmicLauncherBlocksApps renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    launcherComponentsTitle: makeNodeComponent("launcherComponentsTitle"),

    // Metadata about props expected for PlasmicLauncherBlocksApps
    internalVariantProps: PlasmicLauncherBlocksApps__VariantProps,
    internalArgProps: PlasmicLauncherBlocksApps__ArgProps
  }
);

export default PlasmicLauncherBlocksApps;
/* prettier-ignore-end */
